{"version":3,"sources":["config.js","context/UserContext.js","containers/Authentication/Login/Login.js","containers/Authentication/Signup/Signup.js","containers/Authentication/Authentication.js","components/Modal/Popup.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ModalCreateChannel/CreateChannelModal.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ChannelSearch/ChannelSearch.js","components/NavComponents/NavHead.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ChannelHome/ChannelHome.js","components/Modal/Dropdown.js","components/Button/Button.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/CurrentChannel/CurrentChannel.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/NavChannelMode.js","containers/ChatApp/ChatNav/Mode/NavMessageMode/NavMessageMode.js","containers/ChatApp/ChatNav/ChatNav.js","containers/ChatApp/ChannelMode/Message/Message.js","containers/ChatApp/ChannelMode/Message/DayDivider.js","containers/ChatApp/ChannelMode/ChannelMode.js","containers/ChatApp/MessageMode/MessageMode.js","containers/ChatApp/ChatApp.js","App.js","index.js"],"names":["API_URL","UserContext","React","createContext","Login","isAlreadyMember","useCookies","setCookie","setUser","useContext","useState","error","setError","email","password","userAuth","setUserAuth","className","noValidate","onSubmit","e","preventDefault","axios","post","then","res","status","Error","id","data","_id","pseudo","description","picture","role","isConnected","remember_me_token","catch","err","htmlFor","icon","faEnvelope","type","placeholder","value","autoComplete","onChange","target","faLock","onClick","Signup","userSignup","useFormik","initialValues","confirmPassword","validationSchema","Yup","required","oneOf","values","user","console","log","handeSignup","handleSubmit","faUser","getFieldProps","touched","errors","Authentication","props","setIsAlreadyMember","Popup","children","isOpen","setIsOpen","text","popupRef","useRef","useEffect","isOpenCopy","focusModal","current","contains","window","addEventListener","removeEventListener","ref","socket","io","CreateChannelModal","addChannel","channels","userID","name","channel","setChannel","on","oldChannels","spellCheck","emit","ChannelSearch","setChannels","openSearchList","setOpenSearchList","channelFind","setChannelFind","SearchListRef","SearchInput","handleLoadDataChannel","get","open","joinedUser","joinedChannel","old","close","handleCloseSearchList","document","faSearch","onFocus","map","index","push","length","channelID","infos","handleJoinChannel","returnFindChannel","NavHead","title","ChannelHome","currentChannel","selectChannel","isOpenChannelModal","setIsOpenChannelModal","loading","setLoading","finally","bannedMember","filter","message","notifObject","skelettList","i","channelLoadingSkelett","notification","notif","Dropdown","left","top","right","bottom","DropdownRef","style","Button","bg","txt","click","CurrentChannel","isOpenConfirmDelete","setIsOpenConfirmDelete","isOpenPopupBannedMember","setIsOpenPopupBannedMember","isOpenConfirmLeave","setIsOpenConfirmLeave","isOpenMenu","setIsOpenMenu","members","setMembers","oldMembers","member","deletedChannel","leaveMember","leaveChannelInfo","handleLeaveChannel","classNasme","owner","src","alt","bannedMemberID","banInfo","handleBanChannelMember","NavChannelMode","NavMessageMode","ChatNav","currentMode","setMode","openProfileModal","setOpenProfileModal","removeCookie","href","faUserCircle","location","reload","image","faChevronDown","Message","date","hour","messageDay","split","currentDay","Date","toLocaleDateString","parseInt","handleFormatDate","component","formatDate","monthNumber","slice","Channel","channelMessage","setChannelMessage","messageRef","findIndex","mess","sendMessage","innerText","messageInformations","channelMessageCopy","day","month","years","currentMonth","currentYears","forEach","messageMonth","messageYears","DayDivider","returnMessagesWithDayDivider","contentEditable","onKeyDown","keyCode","pressEnterForSendMessage","ChatApp","mode","selectedChannel","setSelectedChannel","ChannelMode","MessageMode","returnCurrentMode","userDisconnected","App","withCredentials","Provider","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.642129a3.chunk.js","sourcesContent":["// REFAIRE LE BUILD POUR LA PRODUCTION\r\n\r\n// NODE JS\r\n// export const API_URL = 'http://localhost:5050/';\r\n// export const API_URL = 'https://chat-group-master.herokuapp.com/api/';\r\nexport const API_URL = '';\r\n\r\n\r\n// export const SOCKET_URL = 'http://localhost:5050';\r\n// export const SOCKET_URL = 'https://chat-group-master.herokuapp.com';\r\nexport const SOCKET_URL = '';","import React from 'react';\r\n\r\nexport const UserContext = React.createContext(null);\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope , faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { API_URL } from '../../../config';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n                \r\n\r\nconst Login = ({isAlreadyMember}) => {\r\n\r\n    const [, setCookie] = useCookies();\r\n    const { setUser } = useContext(UserContext);\r\n    const [error , setError] = useState(false);\r\n    const [userAuth , setUserAuth] = useState({\r\n        email : '',\r\n        password : ''\r\n    })\r\n\r\n\r\n    const handleConnexion = () => {\r\n\r\n        axios.post(`${API_URL}user/signin`,userAuth)\r\n            .then(res => {\r\n                if (res.status === '') throw new Error();\r\n\r\n                setError(false); \r\n\r\n                setUser({\r\n                    id : res.data._id,\r\n                    pseudo : res.data.pseudo,\r\n                    email : res.data.email,\r\n                    description : res.data.description,\r\n                    picture : res.data.picture,\r\n                    role : null,\r\n                    isConnected : true \r\n                })\r\n\r\n                setCookie(['REMEMBER_ME'],res.data.remember_me_token)\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h1 className='mb-8 text-4xl text-white uppercase'>Login</h1>\r\n            <form className='w-full' noValidate onSubmit={e => {\r\n                e.preventDefault()\r\n                handleConnexion()\r\n            }}>\r\n                <div className=\"authInputWrapper mb-5\">\r\n                    <label htmlFor='emailLogin' className='cursor-pointer'>\r\n                        <FontAwesomeIcon className='text-gray-600 text-2xl m-4' icon={faEnvelope} />\r\n                    </label>\r\n\r\n                    <input  id='emailLogin' type=\"email\" className=\"authInput\" placeholder='Email' value={userAuth.email} autoComplete='on'\r\n                            onChange={e => setUserAuth({...userAuth , 'email' : e.target.value})}/>           \r\n                </div>\r\n            \r\n                <div className=\"authInputWrapper mb-5\">\r\n                    <label htmlFor='passwordLogin' className='cursor-pointer'>\r\n                        <FontAwesomeIcon className='text-gray-600 text-2xl m-4 cursor-pointer' icon={faLock} />\r\n                    </label>\r\n\r\n                    <input  id='passwordLogin' type=\"password\" className=\"authInput\" placeholder='Password' value={userAuth.password} \r\n                            onChange={e => setUserAuth({...userAuth , 'password' : e.target.value})}/>           \r\n                </div>\r\n\r\n                {error && <p className='text-red-400'>Email or password incorrect</p>}\r\n\r\n                <button className='authBtn w-full bg-blue-700 hover:bg-opacity-80' type='submit'>Connexion</button>\r\n            </form>\r\n\r\n            <button className='authBtn p-8 bg-green-700 hover:bg-opacity-80' onClick={() => isAlreadyMember(false)}>Register</button>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { API_URL } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser , faLock , faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'; \r\n\r\nconst Signup = ({isAlreadyMember}) => {\r\n\r\n    const handeSignup = (user) => {\r\n        axios.post(`${API_URL}user/signup`,user)\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log('ERROR ---- ' + err);\r\n            })\r\n    }\r\n\r\n    const userSignup = useFormik({\r\n        initialValues : {\r\n            pseudo : '',\r\n            email : '',\r\n            password : '',\r\n            confirmPassword : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            pseudo :  Yup.string()\r\n                        .required('Required'),\r\n\r\n            email :     Yup.string()\r\n                        .required('Email address is required')\r\n                        .email('Invalid email address'),\r\n\r\n            password :  Yup.string()\r\n                        .required('Password is required'),\r\n\r\n            confirmPassword :   Yup.string()\r\n                                .required('Please confirm your password')\r\n                                .oneOf([Yup.ref('password'), null], 'Password must matched')\r\n        }),\r\n        onSubmit : values => {\r\n            const user = {\r\n                pseudo : values.pseudo,\r\n                email : values.email,\r\n                password : values.password\r\n            }\r\n            handeSignup(user);\r\n        }\r\n    });\r\n\r\n     return (\r\n        <>\r\n\r\n            <h1 className='mb-8 text-4xl text-white uppercase'>Sign Up</h1>\r\n\r\n            <form onSubmit={userSignup.handleSubmit} className='w-full' autoComplete='off'>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='pseudo' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faUser} className='text-gray-600 text-2xl m-4'/>\r\n                        </label>\r\n                        <input \r\n                            id='pseudo' \r\n                            type=\"text\" \r\n                            className=\"authInput\" \r\n                            placeholder='Full Name' \r\n                            {...userSignup.getFieldProps('pseudo')}/>\r\n                    </div>   \r\n                        {\r\n                            userSignup.touched.pseudo && userSignup.errors.pseudo &&\r\n            \r\n                            <p className='text-red-400'>{userSignup.errors.pseudo}</p>\r\n\r\n                        }\r\n                </div>   \r\n\r\n        \r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='Email' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faEnvelope} className='text-gray-600 text-2xl m-4'/>\r\n                        </label>\r\n                        <input \r\n                            id='Email' \r\n                            type=\"text\" \r\n                            className=\"authInput\" \r\n                            placeholder='Email'\r\n                            {...userSignup.getFieldProps('email')}/>           \r\n                    </div>\r\n                        {\r\n                            userSignup.touched.email && userSignup.errors.email &&\r\n            \r\n                            <p className='text-red-400'>{userSignup.errors.email}</p>\r\n\r\n                        }\r\n                </div>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='Password' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faLock} className='text-gray-600 text-2xl m-4'/>\r\n                        </label>\r\n                        <input \r\n                            id='Password' \r\n                            type=\"password\" \r\n                            className=\"authInput\" \r\n                            placeholder='Password' \r\n                            {...userSignup.getFieldProps('password')}/>\r\n                    </div>  \r\n                        {\r\n                            userSignup.touched.password && userSignup.errors.password &&\r\n            \r\n                            <p className='text-red-400'>{userSignup.errors.password}</p>\r\n\r\n                        }\r\n                </div>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='ConfirmPassword' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faLock} className='text-gray-600 text-2xl m-4'/>\r\n                        </label>\r\n                        <input \r\n                            id='ConfirmPassword' \r\n                            type=\"password\" \r\n                            className=\"authInput\"\r\n                            placeholder='Confirm password'\r\n                            {...userSignup.getFieldProps('confirmPassword')}/>\r\n                    </div>\r\n                        {\r\n                            userSignup.touched.confirmPassword && userSignup.errors.confirmPassword &&\r\n            \r\n                            <p className='text-red-400'>{userSignup.errors.confirmPassword}</p>\r\n\r\n                        }\r\n                </div>\r\n\r\n                <button className='authBtn w-full bg-blue-700 hover:bg-opacity-80' type='submit'>Sign Up</button>\r\n\r\n            </form>\r\n\r\n            <button className='authBtn p-8 bg-green-700 hover:bg-opacity-80' onClick={() => isAlreadyMember(true)}>Connexion</button>\r\n\r\n        </>\r\n     )\r\n\r\n}\r\n\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport Login from './Login/Login';\r\nimport Signup from './Signup/Signup';\r\n\r\nconst Authentication = (props) => {\r\n\r\n    const [isAlreadyMember , setIsAlreadyMember] = useState(true);\r\n\r\n    return (\r\n        <div className='p-8 rounded-xl flex flex-col items-center justify-center w-96 shadow-2xl border border-gray-700 bg-gray-800'>\r\n                {\r\n\r\n                    isAlreadyMember ?\r\n\r\n                        <Login isAlreadyMember={setIsAlreadyMember} />\r\n\r\n                        :\r\n\r\n                        <Signup isAlreadyMember={setIsAlreadyMember} />\r\n\r\n                }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Authentication;","import React, { useRef , useEffect } from 'react';\r\n\r\nconst Popup = ({ children , isOpen , setIsOpen , text }) => {\r\n\r\n    const popupRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const isOpenCopy = isOpen;\r\n        const focusModal = (e) => {\r\n            if (!popupRef.current) return;\r\n            if (!popupRef.current.contains(e.target) && isOpenCopy) {\r\n                setIsOpen(false)  \r\n            } \r\n        }\r\n\r\n        window.addEventListener('mousedown',focusModal)\r\n        return () => {\r\n            window.removeEventListener('mousedown',focusModal)\r\n        }\r\n    },[isOpen])\r\n\r\n    return (\r\n        <div className={`absolute w-full h-full bg-black bg-opacity-50 transition z-50 duration-200 transform ${isOpen ? 'opacity-100 z-50' : 'opacity-0 pointer-events-none'} flex items-center justify-center`}>\r\n\r\n            <div ref={popupRef} className={`text-white bg-black-1100 h-auto w-auto p-6 rounded-xl transition delay-75 duration-200 ease transform ${isOpen ? 'scale-100 opacity-100' : 'opacity-0 scale-0'}`}>\r\n\r\n                {text && <p className='w-40 mb-4 text-center m-auto text-lg italic'>{text}</p>} \r\n\r\n                {children}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup;","import React, { useContext, useEffect, useRef , useState } from 'react';\r\nimport Popup from '../../../../../../components/Modal/Popup';\r\nimport { SOCKET_URL } from '../../../../../../config';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport  io  from 'socket.io-client';\r\n\r\nconst socket = io(SOCKET_URL);\r\n\r\nconst CreateChannelModal = ({ isOpen , setIsOpen , channels , addChannel }) => {\r\n\r\n    const { user } = useContext(UserContext);\r\n    const [channel ,  setChannel] = useState({\r\n        // date : new Date().toJSON().slice(0,10).replace(/-/g,'/'),\r\n        userID : user.id,\r\n        name : '',\r\n        description : ''\r\n    })\r\n\r\n    const createChannel = () => {\r\n  \r\n        socket.emit('createChannel',channel);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('createChannel',({userID , channel}) => {\r\n            if (userID !== user.id) return;\r\n            addChannel(oldChannels => [...oldChannels , channel]);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <Popup isOpen={isOpen} setIsOpen={setIsOpen}>\r\n            <h4 className='text-white font-semibold mb-7'>NEW CHANNEL</h4>\r\n            <div>\r\n                <input className='bg-InputCreateChannel rounded-md mb-5 p-2 w-full ctmFocus' type=\"text\"  id=\"\" \r\n                        value={channel.name}\r\n                        onChange={e => setChannel({...channel , 'name' : e.target.value})}\r\n                        />\r\n\r\n                <textarea className='bg-InputCreateChannel rounded-md mb-5 p-2  w-full h-24 resize-none ctmFocus leading-4'\r\n                        spellCheck='false'\r\n                        value={channel.description}\r\n                        onChange={e => setChannel({...channel , 'description' : e.target.value})}\r\n                ></textarea>\r\n\r\n                <button className='bg-blue-600 rounded-md py-1 px-6 text-white ctmFocus hover:bg-blue-700 float-right'\r\n                        onClick={() => createChannel()}\r\n                >Save</button>\r\n            </div>\r\n        </Popup>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateChannelModal;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport axios from 'axios';\r\nimport { API_URL , SOCKET_URL } from '../../../../../../config'; \r\nimport io from 'socket.io-client';\r\nimport './openAnimation.css';\r\n\r\nconst socket = io(SOCKET_URL);\r\n\r\nconst ChannelSearch = ({ channels , setChannels }) => {\r\n\r\n    const [openSearchList , setOpenSearchList] = useState(false);\r\n    const [channelFind , setChannelFind] = useState([]);\r\n    const { user } = useContext(UserContext);\r\n    const SearchListRef = useRef();\r\n    const SearchInput = useRef();\r\n\r\n    const handleLoadDataChannel = () => {\r\n        axios.get(`${API_URL}channel/search/${user.id}`)\r\n        .then(res => {\r\n            setChannelFind(res.data)\r\n        })\r\n    }\r\n    \r\n    const handleSearchChannel = () => {\r\n        setOpenSearchList(true);\r\n        handleLoadDataChannel()\r\n    }\r\n\r\n    const handleJoinChannel = (channelID) => {\r\n        const infos = {\r\n            userID : user.id,\r\n            channelID\r\n        }\r\n\r\n        socket.emit('joinChannel',infos)\r\n    }\r\n    useEffect(() => {\r\n        socket.open()\r\n        socket.on('joinChannel',({ joinedUser , joinedChannel }) => {\r\n            handleLoadDataChannel()\r\n            setOpenSearchList(false)\r\n            if (joinedUser._id !== user.id) return;\r\n            setChannels(old => [...old, joinedChannel])\r\n        })   \r\n        return () => socket.close()     \r\n    },[])\r\n\r\n    const returnFindChannel = () => {\r\n        const channels = [];\r\n        channelFind.map((channel, index) => {\r\n            channels.push(  <li key={channel._id} className={`w-full flex items-center ${index !== channelFind.length -1 && 'border-b'} bg-gray-600 bg-opacity-70 transition duration-200 hover:bg-opacity-100`}>\r\n                                <button className='flex p-3 w-full ctmFocus items-center' onClick={() => handleJoinChannel(channel._id)}>\r\n                                    <div className='h-7 w-7 bg-red-400 rounded-md mr-4 flex items-center justify-center'>{channel.name[0]}</div>\r\n                                    <span>{channel.name}</span>\r\n                                </button>\r\n                            </li>\r\n                        )  \r\n        })\r\n        return channels;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleCloseSearchList = (e) => {\r\n            (!SearchListRef.current.contains(e.target) && !SearchInput.current.contains(e.target)) && setOpenSearchList(false)\r\n        }\r\n        document.addEventListener('mousedown',handleCloseSearchList)\r\n        return () => {\r\n            document.removeEventListener('mousedown',handleCloseSearchList)\r\n        }\r\n    },[openSearchList])\r\n\r\n     return (\r\n         <>\r\n            <div className='px-4'>\r\n                <div className='p-2 h-14 relative' ref={SearchInput}>\r\n                        <label htmlFor='search' className='absolute text-white top-4 left-4 cursor-pointer'><FontAwesomeIcon icon={faSearch}/></label>\r\n                        <input id='search' type='search' autoComplete='off' \r\n                            className='focus:outline-none h-full w-full rounded-md p-1 pl-10 inputSearch leading-10 ctmFocus' \r\n                            placeholder='Search'\r\n                            onFocus={() => handleSearchChannel()}\r\n                        />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full\">\r\n                <div className={`absolute w-full px-4 overflow-hidden rounded-lg ${openSearchList ? 'z-50' : 'z-index--1'}`} ref={SearchListRef}>\r\n                    <ul className={`w-full bg-gray-500 rounded-lg transiton duration-200 ease-in-out opacity-0 overflow-hidden ${openSearchList && 'opacity-100'}`}>\r\n                        {\r\n                            returnFindChannel()\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n     )\r\n\r\n}\r\n\r\nexport default ChannelSearch;","import React from 'react';\r\n\r\nconst NavHead = (props) => {\r\n\r\n     return (\r\n        <div className={`shadow-lg h-16 flex-shrink-0 text-gray-100 font-bold text-lg px-6 flex items-center ${props.className}`}>\r\n         \r\n            <span>{props.title}</span>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default NavHead;","import React, { useContext, useEffect, useState } from 'react';\r\nimport CreateChannelModal from '../ModalCreateChannel/CreateChannelModal';\r\nimport ChannelSearch from '../ChannelSearch/ChannelSearch';\r\nimport NavHead from '../../../../../../components/NavComponents/NavHead';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { API_URL , SOCKET_URL } from '../../../../../../config';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport './scrollbar.css';\r\n\r\nconst socket = io(SOCKET_URL);\r\n\r\nconst ChannelHome = ({ currentChannel , selectChannel }) => {\r\n\r\n    const [isOpenChannelModal , setIsOpenChannelModal] = useState(false);\r\n    const [loading , setLoading] = useState(false);\r\n    const [channels , setChannels] =  useState([]);\r\n    const { user } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`${API_URL}channel/${user.id}`)\r\n            .then( res => {\r\n                setChannels(res.data)\r\n                setLoading(false)\r\n            })\r\n            .finally (() => {\r\n                // console.log('stop loading')\r\n                setLoading(false)\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        socket.on('banMember', ({bannedMember , channelID}) => {\r\n            if (bannedMember._id === user.id) {\r\n                setChannels(oldChannels => oldChannels.filter(channel => channel._id !== channelID))\r\n            }\r\n        })\r\n        socket.on('sendMessage',(message) => {\r\n            if (currentChannel._id !== message.channelID) {\r\n                // LA CONDITION N'A PAS L'AIR DE FONCTIONNE A REVOIR\r\n                const notifObject = {\r\n                    userID : user.id,\r\n                    channelID : message.channelID\r\n                }\r\n                socket.emit('channelNotification',notifObject)\r\n            };\r\n        })\r\n        socket.on('channelNotification',({ userID , channelID }) => {\r\n            // setChannels(oldChannels => {\r\n            //     const indexChannelNotif = oldsChannels.findIndex(channel => channel._id === message.channelID)\r\n            //     if (indexChannelNotif === -1) return oldsChannels;\r\n            //     const channelsCopy = [...oldsChannels];           \r\n            // })\r\n        })\r\n    },[])\r\n    // const handleCreate\r\n\r\n    const channelLoadingSkelett = () => {\r\n        const skelettList = [];\r\n        for (let i = 0 ; i < 7 ; i++){\r\n            skelettList.push(<div key={i} className='flex items-center mb-4 cursor-pointer w-full p-2 rounded-lg animate-pulse'>\r\n                                <div className='w-8 h-8 rounded-md bg-gray-400 mr-3'></div>\r\n                                <div className='w-44 h-8 rounded-md bg-gray-400'></div>\r\n                            </div>)\r\n        }\r\n        return skelettList;\r\n    }\r\n\r\n     return (\r\n         <>\r\n \r\n\r\n            {/* CREATE CHANNEL MODAL */}\r\n            <CreateChannelModal isOpen={isOpenChannelModal} setIsOpen={setIsOpenChannelModal} channels={channels} addChannel={setChannels}/>\r\n            {/* ---------- */}\r\n            \r\n            <NavHead title='Channel' className='justify-between'>\r\n\r\n                <button \r\n                    onClick={() => setIsOpenChannelModal(true)}\r\n                    className='channelIcon p-1 rounded-md ctmFocus hoverMenuProfileBg'>\r\n                    <IoMdAdd className='text-white'/>\r\n                </button>  \r\n\r\n            </NavHead>\r\n\r\n            <ChannelSearch channels={channels} setChannels={setChannels} />\r\n            \r\n            <div className=\"p-4 overflow-y-scroll scrollbar h-full\">\r\n\r\n                {\r\n                    loading ? channelLoadingSkelett() :\r\n\r\n                    channels.map((channel,index) => {\r\n                        return  <button key={channel._id} onClick={() => selectChannel(channel)}\r\n                                    className={`flex items-center ${index !== channels.length -1 && 'mb-4'} relative cursor-pointer w-full ctmFocus hoverMenuProfileBg p-2 rounded-lg`}>\r\n                                    {channel.notification.map((notif,index) => {\r\n                                        return notif.notification !== 0  && \r\n                                                <div key={index} className='absolute h-10 w-10 bg-red-500 rounded-full'>{notif.notification}</div> \r\n\r\n                                    })}\r\n                                    <div className='w-8 h-8 channelIcon mr-3 rounded-md flex items-center justify-center text-white uppercase'>{channel.name[0]}</div>\r\n                                    <span className='text-gray-300 uppercase'>{channel.name}</span>\r\n                                </button>\r\n                    })\r\n                }\r\n\r\n            </div>\r\n         </>\r\n     )\r\n\r\n}\r\n\r\nexport default ChannelHome;","import React, { useRef , useEffect } from 'react';\r\n\r\nconst Dropdown = ({ children , isOpen , setIsOpen , left , top , right , bottom }) => {\r\n\r\n    const DropdownRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const isOpenCopy = isOpen;\r\n        const focusModal = (e) => {\r\n            if (!DropdownRef.current) return;\r\n            if (!DropdownRef.current.contains(e.target) && isOpenCopy) {\r\n                setIsOpen(false)  \r\n            } \r\n        }\r\n\r\n        window.addEventListener('mousedown',focusModal)\r\n        return () => {\r\n            window.removeEventListener('mousedown',focusModal)\r\n        }\r\n    },[isOpen])\r\n\r\n     return (\r\n        <div ref={DropdownRef}\r\n            style={{left : left || 'unset', top : top || 'unset',  right : right || 'unset' , bottom : bottom || 'unset' }}\r\n            className={`w-48 bg-black-700 absolute rounded-xl p-3 transition duration-200 opacity-0 transform ${isOpen ? 'scale-100 opacity-100' : 'scale-0 opacity-0'}`}>\r\n            <ul className='flex flex-col justify-evenly h-full text-left text-white'>\r\n\r\n                {children}\r\n\r\n            </ul>\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\n\r\nconst Button = ({ children , bg , txt , click , className }) => {\r\n\r\n     return (\r\n        <button \r\n            className={`px-5 py-2 ${bg} ${txt} ${className} m-2 ctmFocus transition duration-200 hover:bg-opacity-70 rounded`}\r\n            onClick={click}\r\n            >{children}\r\n        </button>\r\n     )\r\n\r\n}\r\n\r\nexport default Button;","import React, { useContext, useEffect, useState } from 'react';\r\nimport NavHead from '../../../../../../components/NavComponents/NavHead';\r\nimport Drowdown from '../../../../../../components/Modal/Dropdown';\r\nimport Popup from '../../../../../../components/Modal/Popup';\r\nimport Button from '../../../../../../components/Button/Button';\r\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\r\nimport { API_URL , SOCKET_URL } from '../../../../../../config';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport { ImExit } from 'react-icons/im';\r\nimport { RiEdit2Fill , RiUser3Fill , RiVipCrownFill , RiDeleteBin5Fill } from 'react-icons/ri';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { IoBan } from 'react-icons/io5';\r\n// BOUTON POUR QUITTER LE CHANNEL \r\n// BOUTON POUR SUPPRIMER LE CHANNEL SI ADMIN DU CHANNEL ?\r\n// BOUTON POUR MODIFIER LE CHANNEL SI ADMIN DU CHANNEL ?\r\nconst socket = io(SOCKET_URL);\r\n\r\nconst CurrentChannel = ({ currentChannel , selectChannel }) => {\r\n\r\n    const [isOpenConfirmDelete , setIsOpenConfirmDelete] = useState(false);\r\n    const [isOpenPopupBannedMember , setIsOpenPopupBannedMember] = useState(false)\r\n    const [isOpenConfirmLeave , setIsOpenConfirmLeave] = useState(false);\r\n    const [isOpenMenu , setIsOpenMenu] = useState(false);\r\n    const [members , setMembers] = useState([]);\r\n    const { user } = useContext(UserContext);\r\n\r\n    const handleLeaveChannel = () => {\r\n        const leaveChannelInfo = {\r\n            userID : user.id,\r\n            channelID : currentChannel._id\r\n        }\r\n        \r\n        socket.emit('leaveChannel', leaveChannelInfo)\r\n        selectChannel('')\r\n    }\r\n\r\n    const handleDeleteChannel = () => {\r\n        socket.emit('deleteChannel',currentChannel._id)\r\n    }\r\n\r\n    const handleEditChannel = () => {\r\n        console.log('edit')\r\n    }\r\n\r\n    const handleBanChannelMember = (bannedMemberID) => {\r\n        const banInfo = {\r\n            bannedMemberID,\r\n            channelID : currentChannel._id\r\n        }\r\n\r\n        socket.emit('banMember', banInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('joinChannel', ({joinedUser , joinedChannel}) => {\r\n            setMembers(old => [...old,joinedUser]);\r\n        })\r\n        socket.on('banMember', ({bannedMember , channelID}) => {\r\n            if(bannedMember._id === user.id && channelID === currentChannel._id) setIsOpenPopupBannedMember(true);\r\n              \r\n            if (channelID === currentChannel._id) setMembers(oldMembers => oldMembers.filter(member => member._id !== bannedMember._id));\r\n        })\r\n        socket.on('deleteChannel',(deletedChannel) => {\r\n            if (currentChannel._id === deletedChannel._id) selectChannel('');\r\n        })\r\n        socket.on('leaveChannel',({ leaveMember , channelID }) => {\r\n            console.log(leaveMember)\r\n            if (channelID === currentChannel._id) setMembers(oldMembers => oldMembers.filter(member => member._id !== leaveMember._id));\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}channel/user/${currentChannel._id}`)\r\n            .then(res => {\r\n                setMembers(res.data);\r\n            })\r\n        return () => setMembers([]);\r\n    },[])\r\n\r\n     return (\r\n         <>\r\n            <Popup isOpen={isOpenPopupBannedMember} setIsOpen={setIsOpenPopupBannedMember}>\r\n                <h3>Your are banned from this channel</h3>\r\n                <div>\r\n                    <Button click={() => selectChannel('')}>Oh shit</Button>\r\n                    <Button click={() => selectChannel('')}>Nice</Button>\r\n                </div>\r\n            </Popup>\r\n\r\n            <Popup isOpen={isOpenConfirmDelete} setIsOpen={setIsOpenConfirmDelete} text='Are you sure you delete this channel?'>\r\n                <div className=\"flex items-center justify-around\">\r\n                    <Button click={() => setIsOpenConfirmDelete(false)}>Cancel</Button>\r\n                    <Button className='border border-red-500 hover:bg-red-500 hover:text-white' txt='text-red-500' click={() => handleDeleteChannel()}>Delete</Button>\r\n                </div>        \r\n            </Popup>\r\n\r\n            <Popup isOpen={isOpenConfirmLeave} setIsOpen={setIsOpenConfirmLeave} text='Are you sure you leave the channel?'>\r\n                <div className=\"flex items-center justify-around\">\r\n                    <Button click={() => setIsOpenConfirmLeave(false)}>Cancel</Button>\r\n                    <Button className='border border-red-500 hover:bg-red-500 hover:text-white' txt='text-red-500'  click={() => handleLeaveChannel()}>Leave</Button>\r\n                </div>     \r\n            </Popup>\r\n\r\n            <NavHead classNasme='justify-start flex-shrink-0'>\r\n                <button className='text-2xl ctmFocus mr-3' onClick={() => selectChannel('')}>\r\n                    <HiOutlineChevronLeft />\r\n                </button>\r\n                <span>All channels</span>\r\n            </NavHead>\r\n\r\n                <div className=\"px-6 py-4\">\r\n                    <div className='flex justify-between items-center mb-2 relative'>\r\n                        <h3 className='uppercase text-gray-300 font-bold'>{currentChannel.name}</h3> \r\n                        <button  \r\n                            className='text-white text-2xl ctmFocus'\r\n                            onClick={() => setIsOpenMenu(true)}\r\n                        >\r\n                            <BiChevronDown />  \r\n                        </button>\r\n\r\n                    <Drowdown isOpen={isOpenMenu} setIsOpen={setIsOpenMenu} top='25px' right='0'>\r\n                        <li>\r\n                            <button \r\n                                className='w-full ctmFocus flex items-center text-gray-200 hoverMenuProfileBg p-2 rounded-lg' \r\n                                onClick={() => setIsOpenConfirmLeave(true)}>\r\n                                <ImExit className='mr-3' />\r\n                                LEAVE\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button \r\n                                className='w-full ctmFocus flex items-center hoverMenuProfileBg p-2 rounded-lg text-gray-200'\r\n                                onClick={() => handleEditChannel()}>\r\n                                <RiEdit2Fill className='mr-3' />\r\n                                EDIT\r\n                            </button>\r\n                        </li>\r\n                        {   \r\n                            (user.id === currentChannel.owner || user.role === 'admin') &&\r\n                            <>            \r\n                                <li className='border-b border-gray-500 m-2'></li>\r\n                                <li>\r\n                                    <button \r\n                                        className='w-full ctmFocus flex items-center hoverMenuProfileBg p-2 rounded-lg text-red-500'\r\n                                        onClick={() => setIsOpenConfirmDelete(true)}>\r\n                                        <RiDeleteBin5Fill className='mr-3' />\r\n                                        DELETE\r\n                                    </button>\r\n                                </li>\r\n                            </>\r\n                        }\r\n               \r\n                    </Drowdown>\r\n\r\n                    </div>\r\n                    <p className='text-gray-300'>{currentChannel.description ? currentChannel.description : 'no description'}</p>      \r\n                </div>\r\n                <h3 className='uppercase text-gray-300 font-bold px-6 py-4'>Members</h3>\r\n                    <ul className='overflow-y-scroll scrollbar h-full px-4'>\r\n                        {\r\n                            members.map((member, index) => {\r\n                                return  <li className='mb-4 flex justify-between' key={index}>\r\n                                            <div className='flex items-center p-2'>\r\n                                                <img className='w-9 h-9 bg-white mr-5 rounded' src={member.picture} alt='C'/>\r\n                                                <span className={`text-lg ${user.id === member._id ? 'text-gray-300' : 'text-gray-400'} font-bold`}>{member.pseudo}</span> \r\n                                                {member._id === currentChannel.owner && <RiVipCrownFill className='ml-2 text-yellow-500'/>}\r\n                                            </div>\r\n                                            <div className='flex items-center text-white'>\r\n                                                <button className='ctmFocus p-1'>\r\n                                                    <RiUser3Fill />  \r\n                                                </button>\r\n\r\n                                                {((user.id === currentChannel.owner || user.role === 'admin') && member._id !== user.id) &&   \r\n\r\n                                                    <button className='ml-4 ctmFocus p-1' onClick={() => handleBanChannelMember(member._id)}>\r\n                                                        <IoBan />  \r\n                                                    </button>   \r\n                                                }                                                                \r\n                                            </div>  \r\n                                        </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n         </>\r\n     )\r\n\r\n}\r\n\r\nexport default CurrentChannel;","import React from 'react';\r\nimport ChannelHome from './ChannelHome/ChannelHome';\r\nimport CurrentChannel from './CurrentChannel/CurrentChannel';\r\n\r\nconst NavChannelMode = ( { selectChannel , currentChannel } ) => {\r\n\r\n     return (\r\n         <>\r\n            {\r\n                currentChannel ?\r\n\r\n                <CurrentChannel currentChannel={currentChannel} selectChannel={selectChannel} />\r\n\r\n                :\r\n\r\n                <ChannelHome currentChannel={currentChannel} selectChannel={selectChannel} />\r\n            }\r\n\r\n         </>\r\n     )\r\n\r\n}\r\n\r\nexport default NavChannelMode;","import React from 'react';\r\n\r\nconst NavMessageMode = (props) => {\r\n\r\n     return (\r\n         <div>\r\n\r\n            <div className='border-b-2 h-16 border-gray-900 text-gray-100 font-bold text-lg px-6 flex items-center justify-between'>\r\n\r\n                <h1 className='text-center text-white'>Message</h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"p-4\">\r\n\r\n                <button className='flex items-center mb-4 cursor-pointer w-full ctmFocus hoverMenuProfileBg p-2 rounded-lg'>\r\n                    <div className='w-8 h-8 channelIcon mr-3 rounded-md flex items-center justify-center text-white'></div>\r\n                    <span className='text-gray-300'>Message</span>\r\n                </button>\r\n\r\n            </div>\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default NavMessageMode;","import React, { useContext, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown , faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaTwitter } from 'react-icons/fa';\r\nimport { IoMdExit } from 'react-icons/io';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { useCookies } from 'react-cookie';\r\nimport NavChannelMode from './Mode/NavChannelMode/NavChannelMode';\r\nimport NavMessageMode from './Mode/NavMessageMode/NavMessageMode';\r\nimport Dropdown from '../../../components/Modal/Dropdown';\r\n\r\nconst ChatNav = ({ currentMode , setMode, selectChannel , currentChannel }) => {\r\n\r\n    const { user } = useContext(UserContext);\r\n    const [openProfileModal , setOpenProfileModal] = useState(false)\r\n    const [,, removeCookie] = useCookies();\r\n\r\n     return (\r\n         <div className='w-72 bg-black-900 flex flex-col justify-between flex-shrink-0'>\r\n\r\n            <>\r\n                    {\r\n                        currentMode === 'channel' ?\r\n\r\n                            <NavChannelMode currentChannel={currentChannel} selectChannel={selectChannel} /> \r\n\r\n                                :\r\n\r\n                            <NavMessageMode />\r\n                    }\r\n                    \r\n            </>\r\n\r\n            <div>\r\n\r\n                <div className=\"h-14 bg-gray-700 flex\">\r\n                    <button className='px-6 w-full text-gray-300 ctmFocus hover:bg-gray-800' onClick={() => setMode('channel')}>CHANNEL</button>\r\n                    <button className='px-6 w-full text-gray-300 ctmFocus hover:bg-gray-800' onClick={() => setMode('message')}>MESSAGE</button>\r\n                </div>\r\n\r\n                <a href='#' className=\"h-20 bg-black-1100 p-6 flex items-center justify-between w-full ctmFocus ring-inset relative\" onClick={e => {\r\n                    e.preventDefault()\r\n                    setOpenProfileModal(true)}}>\r\n\r\n                        <Dropdown isOpen={openProfileModal} setIsOpen={setOpenProfileModal} top='-144px' right='16px'>\r\n                            <li>\r\n                                <button className='flex w-full transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus'>\r\n                                    <FontAwesomeIcon className='text-xl mr-3' icon={faUserCircle}/> \r\n                                    My Profile   \r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button className='flex w-full transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus'>\r\n                                    <FaTwitter className='text-xl mr-3' />\r\n                                    Tweeter\r\n                                </button>\r\n                            </li>\r\n                            <li className='h-1 border-b border-gray-100 my-2 opacity-30'></li>\r\n                            <li>\r\n                                <button \r\n                                    className='flex w-full text-red-500 transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus' \r\n                                    onClick={() => {\r\n                                        removeCookie(['REMEMBER_ME'])\r\n                                        window.location.reload()\r\n                                    }}>\r\n                                    <IoMdExit className='text-xl mr-3' /> \r\n                                    Logout\r\n                                </button>\r\n                            </li>\r\n                        </Dropdown>\r\n\r\n                    <div className=\"flex items-center\">\r\n                        <img className='h-10 w-10 mr-5' src={user.image} alt='profile'></img>\r\n                        <span className='text-gray-300 text-xl'>{user.pseudo}</span>\r\n                    </div>\r\n                    <FontAwesomeIcon className='text-gray-300' icon={faChevronDown}/>\r\n                </a>\r\n\r\n            </div>\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default ChatNav;","import React from 'react';\r\n\r\nconst Message = ({user , message , date, hour}) => {\r\n\r\n    const handleFormatDate = () => {\r\n        const messageDay = date.split('/');\r\n        const currentDay = new Date().toLocaleDateString().split('/');\r\n        for (let i = 0 ; i <= 2 ; i++){\r\n            messageDay[i] = parseInt(messageDay[i]);\r\n            currentDay[i] = parseInt(currentDay[i]);\r\n        }\r\n\r\n        if (messageDay[1] === currentDay[1] && messageDay[2] === currentDay[2]){\r\n            if (messageDay[0] === currentDay[0]) return 'today at ';\r\n            else if (messageDay[0] === currentDay[0] - 1) return 'yesterday at ';\r\n        }\r\n\r\n        return date;\r\n    }\r\n    \r\n     return (\r\n        <li className='flex mb-4 w-full'>\r\n            <img \r\n                className='h-10 w-10 bg-white rounded-md mr-5 mt-1 flex-none' \r\n                src={user.picture} \r\n                alt={'C'}>\r\n            </img>\r\n            <div className='w-full'>\r\n                <div className='flex items-baseline'>\r\n                    <h2 className='mr-3 font-bold text-lg colorName'>{user.pseudo}</h2> \r\n                    <span className='text-gray-300 text-xs colorName'>{handleFormatDate() + ' ' + hour}</span>\r\n                </div>\r\n                <div className='text-gray-300 w-full'>{message}</div>\r\n            </div>\r\n        </li>\r\n     )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst component = ({ date }) => {\r\n\r\n    const formatDate = () => {\r\n        // let dateDivider = '';\r\n        const month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\r\n        const monthNumber = (date.slice(3,5)[0] === '0')-1 ? date.slice(3,5) - 1 : date.slice(4,5) - 1 ;\r\n\r\n        return `${month[monthNumber]} ${date.slice(0,2)}, ${date.slice(6,10)}`\r\n    }\r\n    formatDate()\r\n    // console.log(date)\r\n     return (\r\n         <li className='flex justify-between items-center mb-4'>\r\n\r\n             <div className='border-b border-gray-500 w-full'></div>\r\n\r\n             <span className='inline-block flex-shrink-0 text-center break-normal mx-4 text-gray-500 text-xs'>{formatDate()}</span>\r\n\r\n             <div className='border-b border-gray-500 bg-gray-500 w-full'></div>\r\n\r\n         </li>\r\n     )\r\n\r\n}\r\n\r\nexport default component;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { IoSend } from 'react-icons/io5';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { API_URL , SOCKET_URL} from '../../../config';\r\nimport axios from 'axios';\r\nimport './customtailwind.css';\r\nimport io from 'socket.io-client';\r\nimport Message from './Message/Message';\r\nimport DayDivider from './Message/DayDivider';\r\n\r\n\r\nconst socket = io(SOCKET_URL);\r\n\r\nconst Channel = ({ currentChannel }) => {\r\n\r\n    const { user } = useContext(UserContext);\r\n    const [channelMessage , setChannelMessage] = useState([]);\r\n    const messageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        // socket.open()\r\n        socket.on('sendMessage', (message) => {\r\n            if (channelMessage.findIndex(mess => mess._id !== message._id) !== -1) return;\r\n            setChannelMessage(old => [...old, message])\r\n        })\r\n        // VOIR POUR LE DEMONTER\r\n\r\n        // return (() => {socket.close()});\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}channel/message/${currentChannel._id}`) // pas besoin de l'id modifier le back-end\r\n        .then(res => {\r\n            setChannelMessage(res.data)\r\n        })\r\n    },[])\r\n\r\n    const returnMessagesWithDayDivider = () => {   \r\n        const channelMessageCopy = [];\r\n        const day =   channelMessage.filter(message => message.channelID === currentChannel._id).map(message => message.date.slice(0,2))\r\n        const month = channelMessage.filter(message => message.channelID === currentChannel._id).map(message => message.date.slice(3,5))\r\n        const years = channelMessage.filter(message => message.channelID === currentChannel._id).map(message => message.date.slice(6,10))\r\n        let currentDay = day[0];\r\n        let currentMonth = month[0];\r\n        let currentYears = years[0];\r\n        channelMessage.filter(message => message.channelID === currentChannel._id).forEach((message, index) => {\r\n            const messageDay = message.date.slice(0,2)\r\n            const messageMonth = message.date.slice(3,5)\r\n            const messageYears = message.date.slice(6,10)\r\n            if (messageDay !== currentDay || messageMonth !== currentMonth || messageYears !== currentYears) {\r\n                channelMessageCopy.push(<DayDivider key={index} date={message.date} />)\r\n                currentDay = day[index];\r\n                currentMonth = month[index];\r\n                currentYears = years[index];\r\n            }\r\n            channelMessageCopy.push(<Message key={message._id} {...message} />)   \r\n        })\r\n        return channelMessageCopy;\r\n    }\r\n\r\n    // returnMessages()\r\n    const sendMessage = () => {\r\n        const message = messageRef.current.innerText\r\n        if (!message) return;\r\n\r\n        const messageInformations = {\r\n            userID : user.id,\r\n            channelID : currentChannel._id,\r\n            message : message\r\n        }\r\n        messageRef.current.innerText = '';\r\n        socket.emit('sendMessage',messageInformations);\r\n    }   \r\n\r\n    const pressEnterForSendMessage = (e) => {\r\n        \r\n        if (e.keyCode !== 13) return;\r\n        e.preventDefault();\r\n        sendMessage()\r\n    }\r\n    const clickSendForMessage = () => {\r\n        sendMessage()\r\n    }\r\n\r\n     return (\r\n         <div className='flex flex-col h-full w-full justify-between'>\r\n            <div className='h-16 shadow-lg text-gray-100 font-bold text-lg px-11 flex items-center uppercase flex-shrink-0'>\r\n\r\n                <h1>{currentChannel.name ? currentChannel.name : 'Select channel'}</h1>\r\n\r\n            </div>\r\n                {\r\n                    currentChannel ? \r\n                    <>\r\n                        <div className='overflow-y-scroll h-full scrollbar flex flex-col-reverse'>\r\n                            <ul className='px-11 pt-6 break-all mt-auto'>\r\n                            {/* { channelMessage &&\r\n                                channelMessage.filter(channel => channel.channelID === currentChannel._id).map(message => {\r\n                                    return  <Message key={message._id} {...message} />\r\n                                })\r\n                            } */}\r\n                            {\r\n                                returnMessagesWithDayDivider()\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className='min-h-10 max-w-full mx-11 flex relative rounded-md overflow-hidden my-7 flex-shrink-0'>\r\n                                    <div \r\n                                        contentEditable='true'\r\n                                        ref={messageRef}\r\n                                        onKeyDown={(e) => pressEnterForSendMessage(e)}\r\n                                        className='h-full w-full inputSearch ctmFocus p-2 pr-10 break-all text-gray-300' \r\n                                        >\r\n                                    </div>\r\n                                <button \r\n                                    onClick={() => clickSendForMessage()}\r\n                                    className={`absolute right-1 inset-y-1 ctmFocus m-auto bg-blue-500  text-white h-8 w-8 flex items-center justify-center rounded-md cursor-pointer`}>\r\n                                    <IoSend />\r\n                                </button>\r\n                        </div>\r\n                    </>\r\n\r\n                    :\r\n\r\n                    <div className=\"flex items-center justify-center flex-col h-full\">\r\n                        <h3 className='text-4xl'>Welcome !</h3>\r\n                        <p>Please select channel</p>\r\n                    </div>\r\n                }\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n\r\n     return (\r\n         <div>\r\n\r\n             <h1>Message</h1>\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Message;","import React, { useState } from 'react';\r\nimport ChatNav from './ChatNav/ChatNav';\r\nimport ChannelMode from './ChannelMode/ChannelMode';\r\nimport MessageMode from './MessageMode/MessageMode';\r\n\r\nconst ChatApp = (props) => {\r\n\r\n    const [mode , setMode] = useState('channel');\r\n    const [selectedChannel , setSelectedChannel] = useState('');\r\n\r\n    const returnCurrentMode = () => {\r\n        switch(mode){\r\n            case 'channel' : \r\n                return <ChannelMode currentChannel={selectedChannel}/>\r\n            case 'message' : \r\n                return <MessageMode />\r\n            default : \r\n                return <ChannelMode currentChannel={selectedChannel}/>\r\n        }\r\n    }\r\n\r\n     return (\r\n         <div className='w-full h-full bg-black-700 rounded-lg shadow-2xl flex overflow-hidden relative'>\r\n\r\n            <ChatNav currentMode={mode} setMode={setMode} currentChannel={selectedChannel} selectChannel={setSelectedChannel}/>\r\n\r\n            { returnCurrentMode() }\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default ChatApp;","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from './config';\r\nimport Authentication from './containers/Authentication/Authentication';\r\nimport ChatApp from './containers/ChatApp/ChatApp';\r\nimport { UserContext } from './context/UserContext';\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\nconst userDisconnected = {\r\n    id : null,\r\n    pseudo : null,\r\n    email : null,\r\n    description : null,\r\n    picture : null,\r\n    role : null,\r\n    isConnected : false\r\n}\r\n\r\nconst App = (props) => {\r\n\r\n    const [user , setUser] = useState(userDisconnected)\r\n    const [ , setCookie, removeCookie] = useCookies()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}user/rememberme`,{withCredentials : true})\r\n            .then(res => {\r\n                if (res.data === '') throw new Error();\r\n                setUser({\r\n                    id : res.data._id,\r\n                    pseudo : res.data.pseudo,\r\n                    email : res.data.email,\r\n                    description : res.data.description,\r\n                    picture : res.data.picture,\r\n                    role : res.data.role,\r\n                    isConnected : true // pas besoin de ça\r\n                })\r\n                // A VOIR POUR FAIRE DE L'ASYNC\r\n            \r\n                setCookie(['REMEMBER_ME'],res.data.remember_me_token)\r\n            })\r\n            .catch(err => {\r\n                setUser(userDisconnected);\r\n                removeCookie(['REMEMBER_ME'])\r\n            })\r\n    \r\n    },[])\r\n\r\n    return (\r\n        <div className='h-screen flex justify-center items-center bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 p-10'>\r\n\r\n            <UserContext.Provider value={{user , setUser}} >\r\n            \r\n            {   \r\n                !user.isConnected ?  \r\n\r\n                <Authentication /> \r\n\r\n                : \r\n\r\n                <ChatApp />     \r\n            }\r\n   \r\n            </UserContext.Provider>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './tailwindCustomClass.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> , document.querySelector('#root'));"],"sourceRoot":""}