{"version":3,"sources":["config.js","context/UserContext.js","containers/Authentication/Login/Login.js","containers/Authentication/Signup/Signup.js","components/Utils/Notifications/NotificationItem.js","containers/Authentication/Authentication.js","components/Utils/Modal.js","context/SocketContext.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ModalCreateChannel/CreateChannelModal.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ChannelSearch/ChannelSearch.js","components/NavComponents/NavHead.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/ChannelHome/ChannelHome.js","components/Utils/Dropdown.js","components/Button/Button.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/CurrentChannel/CurrentChannel.js","containers/ChatApp/ChatNav/Mode/NavChannelMode/NavChannelMode.js","containers/ChatApp/ChatNav/Mode/NavMessageMode/NavMessageMode.js","containers/ChatApp/ChatNav/ChatNavContent.js","containers/ChatApp/ChatNav/ChatNav.js","containers/ChatApp/ChannelMode/Message/Message.js","containers/ChatApp/ChannelMode/Message/DayDivider.js","containers/ChatApp/ChannelMode/ChannelMode.js","containers/ChatApp/MessageMode/MessageMode.js","containers/ChatApp/ChatApp.js","components/Utils/Notifications/Notifications.js","App.js","index.js"],"names":["API_URL","UserContext","React","createContext","Login","isAlreadyMember","useCookies","setCookie","setUser","useContext","useState","error","setError","email","password","userAuth","setUserAuth","className","noValidate","onSubmit","e","preventDefault","axios","post","then","res","status","Error","id","data","_id","pseudo","description","picture","role","isConnected","currentChannel","notifications","remember_me_token","catch","err","htmlFor","icon","faEnvelope","type","placeholder","value","autoComplete","onChange","target","faLock","onClick","Signup","setIsAlreadyMember","setIsOpenPopupSuccess","user","userSignup","useFormik","initialValues","confirmPassword","validationSchema","Yup","required","oneOf","values","oldUser","push","icons","color","label","console","log","message","handeSignup","handleSubmit","faUser","getFieldProps","touched","errors","NotificationItem","isOpen","Authentication","props","Popup","children","setIsOpen","text","popupRef","useRef","useEffect","isOpenCopy","focusModal","current","contains","window","addEventListener","removeEventListener","ref","socket","io","SocketContext","CreateChannelModal","addChannel","channels","userID","name","channel","setChannel","on","oldChannels","off","Modal","spellCheck","emit","ChannelSearch","setChannels","openSearchList","setOpenSearchList","channelFind","setChannelFind","SearchListRef","SearchInput","handleLoadDataChannel","get","joinedUser","joinedChannel","old","handleCloseSearchList","document","faSearch","onFocus","map","index","length","channelID","infos","handleJoinChannel","returnFindChannel","NavHead","title","ChannelHome","loading","isOpenChannelModal","setIsOpenChannelModal","setIsOpenJoinedChannel","setIsOpenCreateChannel","skelettList","i","channelLoadingSkelett","resetNotifObject","channelNotifReset","indexChannelNotif","findIndex","handleEnterInChannel","notif","notification","Dropdown","left","top","right","bottom","DropdownRef","style","Button","bg","txt","click","CurrentChannel","isOpenConfirmDelete","setIsOpenConfirmDelete","isOpenPopupBannedMember","setIsOpenPopupBannedMember","isOpenConfirmLeave","setIsOpenConfirmLeave","isOpenMenu","setIsOpenMenu","members","setMembers","bannedMember","oldMembers","filter","member","leaveMember","leaveChannelInfo","handleLeaveChannel","classNasme","owner","src","alt","bannedMemberID","banInfo","handleBanChannelMember","NavChannelMode","setLoading","finally","channelNotified","sameChannel","oldsUser","deletedChannel","isBannedMember","Object","entries","NavMessageMode","ChatNavContent","currentMode","setMode","isOpenUserMenu","setIsOpenUserMenu","isOpenUserProfil","setIsOpenUserProfil","removeCookie","setPseudo","setEmail","setPicture","picturePreview","setPicturePreview","formDataRef","hidden","files","pictureURL","URL","createObjectURL","accept","href","FormData","append","handleChangeImage","faUserCircle","location","reload","faChevronDown","ChatNav","isOpenBurgerMenu","setIsOpenBurgerMenu","minWidth","maxWidth","Message","date","hour","messageDay","split","currentDay","Date","toLocaleDateString","parseInt","handleFormatDate","component","formatDate","monthNumber","slice","Channel","channelMessage","setChannelMessage","messageRef","mess","sendMessage","innerText","messageInformations","channelMessageCopy","day","month","years","currentMonth","currentYears","forEach","messageMonth","messageYears","DayDivider","returnMessagesWithDayDivider","contentEditable","onKeyDown","keyCode","pressEnterForSendMessage","ChatApp","mode","selectedChannel","ChannelMode","MessageMode","returnCurrentMode","Notifications","setTimeout","shift","clearTimeout","zIndex","uuidv4","userDisconnected","App","withCredentials","Provider","ReactDOM","render","querySelector"],"mappings":"gTAKaA,EAAU,G,uCCHVC,EAAcC,IAAMC,cAAc,M,gBCyFhCC,EA7ED,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAAqB,EAEXC,cAAbC,EAFwB,oBAGzBC,EAAYC,qBAAWR,GAAvBO,QAHyB,EAINE,oBAAS,GAJH,mBAI1BC,EAJ0B,KAIlBC,EAJkB,OAKAF,mBAAS,CACtCG,MAAQ,GACRC,SAAW,KAPkB,mBAK1BC,EAL0B,KAKfC,EALe,KAuCjC,OACI,qCAEI,oBAAIC,UAAU,qCAAd,mBACA,uBAAMA,UAAU,SAASC,YAAU,EAACC,SAAU,SAAAC,GAC1CA,EAAEC,iBA/BVC,IAAMC,KAAN,UAAcvB,EAAd,eAAmCe,GAC9BS,MAAK,SAAAC,GACF,GAAmB,KAAfA,EAAIC,OAAe,MAAM,IAAIC,MAEjCf,GAAS,GAETJ,EAAQ,CACJoB,GAAKH,EAAII,KAAKC,IACdC,OAASN,EAAII,KAAKE,OAClBlB,MAAQY,EAAII,KAAKhB,MACjBmB,YAAcP,EAAII,KAAKG,YACvBC,QAAUjC,EAAUyB,EAAII,KAAKI,QAC7BC,KAAO,KACPC,aAAc,EACdC,eAAiB,GACjBC,cAAgB,KAGpB9B,EAAU,CAAC,eAAekB,EAAII,KAAKS,sBAEtCC,OAAM,SAAAC,GACH5B,GAAS,OASb,UAII,sBAAKK,UAAU,wBAAf,UACI,uBAAOwB,QAAQ,aAAaxB,UAAU,iBAAtC,SACI,cAAC,IAAD,CAAiBA,UAAU,6BAA6ByB,KAAMC,QAGlE,uBAAQf,GAAG,aAAagB,KAAK,QAAQ3B,UAAU,YAAY4B,YAAY,QAAQC,MAAO/B,EAASF,MAAOkC,aAAa,KAC3GC,SAAU,SAAA5B,GAAC,OAAIJ,EAAY,2BAAID,GAAL,IAAgB,MAAUK,EAAE6B,OAAOH,eAGzE,sBAAK7B,UAAU,wBAAf,UACI,uBAAOwB,QAAQ,gBAAgBxB,UAAU,iBAAzC,SACI,cAAC,IAAD,CAAiBA,UAAU,4CAA4CyB,KAAMQ,QAGjF,uBAAQtB,GAAG,gBAAgBgB,KAAK,WAAW3B,UAAU,YAAY4B,YAAY,WAAWC,MAAO/B,EAASD,SAChGkC,SAAU,SAAA5B,GAAC,OAAIJ,EAAY,2BAAID,GAAL,IAAgB,SAAaK,EAAE6B,OAAOH,eAG3EnC,GAAS,mBAAGM,UAAU,eAAb,yCAEV,wBAAQA,UAAU,iDAAiD2B,KAAK,SAAxE,0BAGJ,wBAAQ3B,UAAU,+CAA+CkC,QAAS,kBAAM9C,GAAgB,IAAhG,0B,0BCgFG+C,EA1JA,SAAC,GAAsE,IAApE/C,EAAmE,EAAnEA,gBAAkBgD,EAAiD,EAAjDA,mBAAiD,KAA5BC,sBAEL5C,oBAAS,IAFwB,gCAGvDD,qBAAWR,IAAtBO,GAHkE,EAGzE+C,KAHyE,EAGlE/C,SAsBTgD,EAAaC,YAAU,CACzBC,cAAe,CACX3B,OAAQ,GACRlB,MAAO,GACPC,SAAU,GACV6C,gBAAiB,IAErBC,iBAAkBC,IAAW,CACzB9B,OAAQ8B,MACHC,SAAS,YAEdjD,MAAOgD,MACFC,SAAS,6BACTjD,MAAM,yBAEXC,SAAU+C,MACLC,SAAS,wBAEdH,gBAAiBE,MACZC,SAAS,gCACTC,MAAM,CAACF,IAAQ,YAAa,MAAO,2BAE5C1C,SAAU,SAAA6C,IA1CM,SAACT,GACjBjC,IAAMC,KAAN,UAAcvB,EAAd,eAAoCuD,GAC/B/B,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,OAAgB,MAAM,IAAIC,MAAM,uBACxC0B,GAAmB,GAEnB7C,GAAQ,SAAAyD,GAMJ,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAQ,uBAEH,eAAIJ,SAGlB1B,OAAM,SAACC,GACJ8B,QAAQC,IAAI,cAAgB/B,EAAIgC,YAgCpCC,CALa,CACT1C,OAAQiC,EAAOjC,OACflB,MAAOmD,EAAOnD,MACdC,SAAUkD,EAAOlD,cAM7B,OACI,qCACI,oBAAIG,UAAU,qCAAd,qBACA,uBAAME,SAAUqC,EAAWkB,aAAczD,UAAU,SAAS8B,aAAa,MAAzE,UAEI,sBAAK9B,UAAU,OAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOwB,QAAQ,SAASxB,UAAU,iBAAlC,SACI,cAAC,IAAD,CAAiByB,KAAMiC,IAAQ1D,UAAU,iCAE7C,mCACIW,GAAG,SACHgB,KAAK,OACL3B,UAAU,YACV4B,YAAY,aACRW,EAAWoB,cAAc,eAGjCpB,EAAWqB,QAAQ9C,QAAUyB,EAAWsB,OAAO/C,QAE/C,mBAAGd,UAAU,eAAb,SAA6BuC,EAAWsB,OAAO/C,YAMvD,sBAAKd,UAAU,OAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOwB,QAAQ,QAAQxB,UAAU,iBAAjC,SACI,cAAC,IAAD,CAAiByB,KAAMC,IAAY1B,UAAU,iCAEjD,mCACIW,GAAG,QACHgB,KAAK,OACL3B,UAAU,YACV4B,YAAY,SACRW,EAAWoB,cAAc,cAGjCpB,EAAWqB,QAAQhE,OAAS2C,EAAWsB,OAAOjE,OAE9C,mBAAGI,UAAU,eAAb,SAA6BuC,EAAWsB,OAAOjE,WAKvD,sBAAKI,UAAU,OAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOwB,QAAQ,WAAWxB,UAAU,iBAApC,SACI,cAAC,IAAD,CAAiByB,KAAMQ,IAAQjC,UAAU,iCAE7C,mCACIW,GAAG,WACHgB,KAAK,WACL3B,UAAU,YACV4B,YAAY,YACRW,EAAWoB,cAAc,iBAGjCpB,EAAWqB,QAAQ/D,UAAY0C,EAAWsB,OAAOhE,UAEjD,mBAAGG,UAAU,eAAb,SAA6BuC,EAAWsB,OAAOhE,cAKvD,sBAAKG,UAAU,OAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOwB,QAAQ,kBAAkBxB,UAAU,iBAA3C,SACI,cAAC,IAAD,CAAiByB,KAAMQ,IAAQjC,UAAU,iCAE7C,mCACIW,GAAG,kBACHgB,KAAK,WACL3B,UAAU,YACV4B,YAAY,oBACRW,EAAWoB,cAAc,wBAGjCpB,EAAWqB,QAAQlB,iBAAmBH,EAAWsB,OAAOnB,iBAExD,mBAAG1C,UAAU,eAAb,SAA6BuC,EAAWsB,OAAOnB,qBAKvD,wBAAQ1C,UAAU,iDAAiD2B,KAAK,SAAxE,wBAIJ,wBAAQ3B,UAAU,+CAA+CkC,QAAS,kBAAM9C,GAAgB,IAAhG,2BClIG0E,EAzBU,SAAC,GAAqC,IAAnCV,EAAkC,EAAlCA,MAAOF,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOY,EAAa,EAAbA,OAAa,EAEftE,mBAAS,GAFM,6BAM1D,OACI,mCACI,qBACIO,UAAS,8BAAyBmD,EAAzB,iBAAuCA,EAAvC,iNAGKY,EAAS,gBAAkB,sBAJ7C,UAOI,qBAAK/D,UAAU,gBAAf,SAAgCkD,IAEhC,sBAAMlD,UAAU,gBAAhB,SAAiCoD,UCYlCY,EA1BQ,SAACC,GAAW,IAAD,EAEiBxE,oBAAS,GAF1B,mBAEvBL,EAFuB,KAELgD,EAFK,OAGsB3C,oBAAS,GAH/B,mBAGH4C,GAHG,WAM9B,OACI,mCACI,qBAAKrC,UAAU,8GAAf,SAGYZ,EAEI,cAAC,EAAD,CAAOA,gBAAiBgD,IAIxB,cAAC,EAAD,CAAQhD,gBAAiBgD,EAAoBA,mBAAoBA,EAAoBC,sBAAuBA,S,iCCezH6B,EAnCD,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAWJ,EAAgC,EAAhCA,OAASK,EAAuB,EAAvBA,UAAYC,EAAW,EAAXA,KAEvCC,EAAWC,mBAiBjB,OAfAC,qBAAU,WACN,IAAMC,EAAaV,EACbW,EAAa,SAACvE,GACXmE,EAASK,UACTL,EAASK,QAAQC,SAASzE,EAAE6B,SAAWyC,GACxCL,GAAU,IAKlB,OADAS,OAAOC,iBAAiB,YAAYJ,GAC7B,WACHG,OAAOE,oBAAoB,YAAYL,MAE7C,CAACX,IAGC,qBAAK/D,UAAS,+FAA0F+D,EAAS,mBAAqB,gCAAxH,qCAAd,SAEI,sBAAKiB,IAAKV,EAAUtE,UAAS,gHAA2G+D,EAAS,wBAA0B,qBAA3K,UAEKM,GAAQ,mBAAGrE,UAAU,8CAAb,SAA4DqE,IAEpEF,Q,SCxBJc,E,MAASC,GPKI,IOJbC,EAAgBjG,0B,QCiEdkG,EAhEY,SAAC,GAAiD,IAA/CrB,EAA8C,EAA9CA,OAAQK,EAAsC,EAAtCA,UAAqBiB,GAAiB,EAA3BC,SAA2B,EAAjBD,YAEjDJ,EAASzF,qBAAW2F,GAF8C,EAG7C3F,qBAAWR,GAA9BsD,EAHgE,EAGhEA,KAAO/C,EAHyD,EAGzDA,QAHyD,EAI1CE,mBAAS,CACnC8F,OAAQjD,EAAK3B,GACb6E,KAAM,GACNzE,YAAa,KAPuD,mBAIjE0E,EAJiE,KAIxDC,EAJwD,KAwCxE,OAzBAlB,qBAAU,WAoBN,OAnBAS,EAAOU,GAAG,iBAAiB,YAA0B,IAAvBJ,EAAsB,EAAtBA,OAAQE,EAAc,EAAdA,QAClClG,GAAQ,SAAAyD,GAMJ,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAK,kBAAcqC,EAAQD,KAAtB,aAEA,eAAIxC,MAEfoB,GAAU,GACVsB,EAAW,CACPH,OAAQjD,EAAK3B,GACb6E,KAAM,GACNzE,YAAa,KAEbwE,IAAWjD,EAAK3B,IACpB0E,GAAW,SAAAO,GAAW,4BAAQA,GAAR,CAAqBH,UAGxC,WACHR,EAAOY,IAAI,oBAEhB,IAGC,eAACC,EAAD,CAAO/B,OAAQA,EAAQK,UAAWA,EAAlC,UACI,oBAAIpE,UAAU,gCAAd,yBACA,gCACI,uBAAOA,UAAU,4DAA4D2B,KAAK,OAAOhB,GAAG,GACxFkB,MAAO4D,EAAQD,KACfzD,SAAU,SAAA5B,GAAC,OAAIuF,EAAW,2BAAKD,GAAN,IAAe,KAAQtF,EAAE6B,OAAOH,YAG7D,0BAAU7B,UAAU,wFAChB+F,WAAW,QACXlE,MAAO4D,EAAQ1E,YACfgB,SAAU,SAAA5B,GAAC,OAAIuF,EAAW,2BAAKD,GAAN,IAAe,YAAetF,EAAE6B,OAAOH,YAGpE,wBAAQ7B,UAAU,qFACdkC,QAAS,WA5CrB+C,EAAOe,KAAK,gBAAiBP,IA2CrB,yBCkDDQ,G,OArGO,SAAC,GAA+B,EAA7BX,SAA8B,IAAnBY,EAAkB,EAAlBA,YAAkB,EAELzG,oBAAS,GAFJ,mBAE3C0G,EAF2C,KAE1BC,EAF0B,OAGX3G,mBAAS,IAHE,mBAG3C4G,EAH2C,KAG7BC,EAH6B,OAIvB9G,qBAAWR,GAA9BsD,EAJ0C,EAI1CA,KAAO/C,EAJmC,EAInCA,QACTgH,EAAgBhC,mBAChBiC,EAAcjC,mBACdU,EAASzF,qBAAW2F,GAEpBsB,EAAwB,WAC1BpG,IAAMqG,IAAN,UAAa3H,EAAb,0BAAsCuD,EAAK3B,KAC1CJ,MAAK,SAAAC,GACF8F,EAAe9F,EAAII,UAiB3B4D,qBAAU,WAgBN,OAfAS,EAAOU,GAAG,eAAc,YAAqC,IAAlCgB,EAAiC,EAAjCA,WAAaC,EAAoB,EAApBA,cACpCrH,GAAQ,SAAAyD,GAMJ,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAK,kBAAcwD,EAAcpB,KAA5B,aAEA,eAAIxC,MAEfyD,IACAL,GAAkB,GACdO,EAAW9F,MAAQyB,EAAK3B,IAC5BuF,GAAY,SAAAW,GAAG,4BAAQA,GAAR,CAAaD,UAGzB,WACH3B,EAAOY,IAAI,kBAEjB,IA0BD,OAVDrB,qBAAU,WACN,IAAMsC,EAAwB,SAAC3G,IACzBoG,EAAc5B,QAAQC,SAASzE,EAAE6B,UAAYwE,EAAY7B,QAAQC,SAASzE,EAAE6B,SAAYoE,GAAkB,IAGhH,OADAW,SAASjC,iBAAiB,YAAYgC,GAC/B,WACHC,SAAShC,oBAAoB,YAAY+B,MAE/C,CAACX,IAGE,qCACG,qBAAKnG,UAAU,OAAf,SACI,sBAAKA,UAAU,oBAAoBgF,IAAKwB,EAAxC,UACQ,uBAAOhF,QAAQ,SAASxB,UAAU,kDAAlC,SAAoF,cAAC,IAAD,CAAiByB,KAAMuF,QAC3G,uBAAOrG,GAAG,SAASgB,KAAK,SAASG,aAAa,MAC1C9B,UAAU,wFACV4B,YAAY,SACZqF,QAAS,kBAjE7Bb,GAAkB,QAClBK,YAqEI,qBAAKzG,UAAU,kBAAf,SACI,qBAAKA,UAAS,0DAAqDmG,EAAiB,OAAS,cAAgBnB,IAAKuB,EAAlH,SACI,oBAAIvG,UAAS,qGAAgGmG,GAAkB,eAA/H,SAvCU,WACtB,IAAMb,EAAW,GAUjB,OATAe,EAAYa,KAAI,SAACzB,EAAS0B,GACtB7B,EAASrC,KAAO,oBAAsBjD,UAAS,mCAA8BmH,IAAUd,EAAYe,OAAQ,GAAK,WAAjE,2EAA/B,SACI,yBAAQpH,UAAU,wCAAwCkC,QAAS,kBAjCrE,SAACmF,GACvB,IAAMC,EAAQ,CACV/B,OAASjD,EAAK3B,GACd0G,aAGJpC,EAAOe,KAAK,cAAcsB,GA2BuEC,CAAkB9B,EAAQ5E,MAAnG,UACI,qBAAKb,UAAU,sEAAf,SAAsFyF,EAAQD,KAAK,KACnG,+BAAOC,EAAQD,WAHdC,EAAQ5E,SAQ9ByE,EA8BakC,cCrFbC,EAdC,SAACxD,GAEZ,OACG,sBAAKjE,UAAS,8FAAyFiE,EAAMjE,WAA7G,UAEI,+BAAOiE,EAAMyD,QAEZzD,EAAME,a,QC2IJwD,G,OAtIK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAAStC,EAA4B,EAA5BA,SAAUY,EAAkB,EAAlBA,YAAkB,EACNzG,oBAAS,GADH,mBACnDoI,EADmD,KAC/BC,EAD+B,OAEhCtI,qBAAWR,GAA7BsD,EAFkD,EAElDA,KAAM/C,EAF4C,EAE5CA,QAF4C,EAGJE,oBAAS,GAHL,mBAG9BsI,GAH8B,aAIHtI,oBAAS,GAJN,mBAI7BuI,GAJ6B,WAK3CxI,qBAAW2F,GAyC1B,OACE,qCAEE,wBAAQjD,QAAS,kBAAM3C,GAAQ,SAAAyD,GAM7B,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAQ,2BAEH,eAAIJ,OANb,uBAiBA,cAAC,EAAD,CACEgF,uBAAwBA,EACxBjE,OAAQ8D,EACRzD,UAAW0D,EACXxC,SAAUA,EACVD,WAAYa,IAId,cAAC,EAAD,CAASwB,MAAM,UAAU1H,UAAU,kBAAnC,SACE,wBACEkC,QAAS,kBAAM4F,GAAsB,IACrC9H,UAAU,yDAFZ,SAIE,cAAC,IAAD,CAASA,UAAU,mBAIvB,cAAC,EAAD,CACE+H,uBAAwBA,EACxBzC,SAAUA,EACVY,YAAaA,IAGf,qBAAKlG,UAAU,yCAAf,SACG4H,EApFuB,WAE5B,IADA,IAAMK,EAAc,GACXC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAYhF,KACV,sBAEEjD,UAAU,4EAFZ,UAIE,qBAAKA,UAAU,wCACf,qBAAKA,UAAU,sCAJVkI,IAQX,OAAOD,EAwECE,GACA7C,EAAS4B,KAAI,SAACzB,EAAS0B,GACrB,OACE,yBAEEjF,QAAS,kBA1EI,SAACuD,GAC5BlG,EAAQ,2BAAK+C,GAAN,IAAYnB,eAAgBsE,KACnC,IAAM2C,EAAmB,CACvB7C,OAAQjD,EAAK3B,GACb0G,UAAW5B,EAAQ5E,KAErBR,IACGC,KADH,UACWvB,EADX,6BAC+CqJ,GAC5C7H,MAAK,SAACC,GACL0F,GAAY,SAACN,GACX,IAAMyC,EAAoB7H,EAAII,KACxB0H,EAAoB1C,EAAY2C,WACpC,SAAC9C,GAAD,OAAaA,EAAQ5E,MAAQwH,EAAkBxH,OAGjD,OADA+E,EAAY0C,GAAqBD,EAC1B,YAAIzC,SAGdtE,OAAM,SAACC,GACN8B,QAAQC,IAAI,WAAa/B,MAuDAiH,CAAqB/C,IACpCzF,UAAS,4BACPmH,IAAU7B,EAAS8B,OAAS,GAAK,OAD1B,8EAHX,UAOG3B,EAAQrE,cAAc8F,KAAI,SAACuB,EAAOtB,GACjC,OACyB,IAAvBsB,EAAMC,cACND,EAAMlD,SAAWjD,EAAK3B,IACpB,sBAEEX,UAAU,qGAFZ,UAIE,qBAAKA,UAAU,kEACf,sBAAMA,UAAU,mCAAhB,SACGyI,EAAMC,aAAe,GAClB,MACAD,EAAMC,iBAPPvB,MAab,qBAAKnH,UAAU,4FAAf,SACGyF,EAAQD,KAAK,KAEhB,sBAAMxF,UAAU,0BAAhB,SACGyF,EAAQD,SA5BNC,EAAQ5E,eC3EhB8H,EAjCE,SAAC,GAAqE,IAAnExE,EAAkE,EAAlEA,SAAWJ,EAAuD,EAAvDA,OAASK,EAA8C,EAA9CA,UAAYwE,EAAkC,EAAlCA,KAAOC,EAA2B,EAA3BA,IAAMC,EAAqB,EAArBA,MAAQC,EAAa,EAAbA,OAE/DC,EAAczE,mBAiBnB,OAfDC,qBAAU,WACN,IAAMC,EAAaV,EACbW,EAAa,SAACvE,GACX6I,EAAYrE,UACZqE,EAAYrE,QAAQC,SAASzE,EAAE6B,SAAWyC,GAC3CL,GAAU,IAKlB,OADAS,OAAOC,iBAAiB,YAAYJ,GAC7B,WACHG,OAAOE,oBAAoB,YAAYL,MAE7C,CAACX,IAGC,qBAAKiB,IAAKgE,EACNC,MAAO,CAACL,KAAOA,GAAQ,QAASC,IAAMA,GAAO,QAAUC,MAAQA,GAAS,QAAUC,OAASA,GAAU,SACrG/I,UAAS,gGAA2F+D,EAAS,wBAA0B,qBAF3I,SAGI,oBAAI/D,UAAU,2DAAd,SAEKmE,OCbF+E,EAZA,SAAC,GAAiD,IAA/C/E,EAA8C,EAA9CA,SAAWgF,EAAmC,EAAnCA,GAAKC,EAA8B,EAA9BA,IAAMC,EAAwB,EAAxBA,MAAQrJ,EAAgB,EAAhBA,UAE3C,OACG,wBACIA,UAAS,oBAAemJ,EAAf,YAAqBC,EAArB,YAA4BpJ,EAA5B,qEACTkC,QAASmH,EAFb,SAGMlF,K,0CC4LCmF,EApLQ,SAAC,GAA8B,EAA5BhE,SAA6B,IAAnBY,EAAkB,EAAlBA,YAE1BjB,EAASzF,qBAAW2F,GAFwB,EAGI1F,oBAAS,GAHb,mBAG3C8J,EAH2C,KAGtBC,EAHsB,OAIY/J,oBAAS,GAJrB,mBAI3CgK,EAJ2C,KAIlBC,EAJkB,OAKEjK,oBAAS,GALX,mBAK3CkK,EAL2C,KAKvBC,EALuB,OAMdnK,oBAAS,GANK,mBAM3CoK,EAN2C,KAM/BC,EAN+B,OAOpBrK,mBAAS,IAPW,mBAO3CsK,EAP2C,KAOlCC,EAPkC,OAQxBxK,qBAAWR,GAA7BsD,EAR0C,EAQ1CA,KAAM/C,EARoC,EAQpCA,QA+Dd,OApCAiF,qBAAU,WA4BN,OA3BAS,EAAOU,GAAG,eAAe,YAAoC,IAAjCgB,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAChCtE,EAAKnB,eAAeN,MAAQ+F,EAAc/F,KAC9CmJ,GAAW,SAAAnD,GAAG,4BAAQA,GAAR,CAAaF,UAE/B1B,EAAOU,GAAG,aAAa,YAAkC,IAA/BsE,EAA8B,EAA9BA,aAAc5C,EAAgB,EAAhBA,UAChC4C,EAAapJ,MAAQyB,EAAK3B,IAAM0G,IAAc/E,EAAKnB,eAAeN,KAAK6I,GAA2B,GAClGrC,IAAc/E,EAAKnB,eAAeN,KAAKmJ,GAAW,SAAAE,GAAU,OAAIA,EAAWC,QAAO,SAAAC,GAAM,OAAIA,EAAOvJ,MAAQoJ,EAAapJ,aAEhIoE,EAAOU,GAAG,gBAAgB,YAAiC,IAA9B0E,EAA6B,EAA7BA,YAAahD,EAAgB,EAAhBA,UACtC9H,GAAQ,SAAAyD,GAMJ,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAQ,kBAEH,eAAIJ,MAEXqH,EAAYxJ,MAAQyB,EAAK3B,KACzBuF,GAAY,SAAAN,GAAW,OAAIA,EAAYuE,QAAO,SAAA1E,GAAO,OAAIA,EAAQ5E,MAAQwG,QACzE9H,EAAQ,2BAAK+C,GAAN,IAAYnB,eAAgB,OAEnCkG,IAAc/E,EAAKnB,eAAeN,KAAKmJ,GAAW,SAAAE,GAAU,OAAIA,EAAWC,QAAO,SAAAC,GAAM,OAAIA,EAAOvJ,MAAQwJ,EAAYxJ,aAE/HR,IAAMqG,IAAN,UAAa3H,EAAb,wBAAoCuD,EAAKnB,eAAeN,MACnDN,MAAK,SAAAC,GACFwJ,EAAWxJ,EAAII,SAEhB,WACHqE,EAAOY,IAAI,eACXZ,EAAOY,IAAI,aACXZ,EAAOY,IAAI,mBAEhB,IAIC,qCACI,eAACC,EAAD,CAAO/B,OAAQ0F,EAAyBrF,UAAWsF,EAAnD,UACI,mEACA,gCACI,cAAC,EAAD,CAAQL,MAAO,kBAAM9J,EAAQ,2BAAK+C,GAAN,IAAYnB,eAAgB,OAAxD,qBACA,cAAC,EAAD,CAAQkI,MAAO,kBAAM9J,EAAQ,2BAAK+C,GAAN,IAAYnB,eAAgB,OAAxD,wBAIR,cAAC2E,EAAD,CAAO/B,OAAQwF,EAAqBnF,UAAWoF,EAAwBnF,KAAK,wCAA5E,SACI,sBAAKrE,UAAU,mCAAf,UACI,cAAC,EAAD,CAAQqJ,MAAO,kBAAMG,GAAuB,IAA5C,oBACA,cAAC,EAAD,CAAQxJ,UAAU,0DAA0DoJ,IAAI,eAAeC,MAAO,WAhElHpE,EAAOe,KAAK,gBAAiB1D,EAAKnB,eAAeN,MAgErC,yBAIR,cAACiF,EAAD,CAAO/B,OAAQ4F,EAAoBvF,UAAWwF,EAAuBvF,KAAK,sCAA1E,SACI,sBAAKrE,UAAU,mCAAf,UACI,cAAC,EAAD,CAAQqJ,MAAO,kBAAMO,GAAsB,IAA3C,oBACA,cAAC,EAAD,CAAQ5J,UAAU,0DAA0DoJ,IAAI,eAAeC,MAAO,kBAjF3F,WACvB,IAAMiB,EAAmB,CACrB/E,OAAQjD,EAAK3B,GACb0G,UAAW/E,EAAKnB,eAAeN,KAGnCoE,EAAOe,KAAK,eAAgBsE,GA2E4FC,IAA5G,wBAIR,eAAC,EAAD,CAASC,WAAW,8BAApB,UACI,wBAAQxK,UAAU,yBAAyBkC,QAAS,kBAAM3C,EAAQ,2BAAK+C,GAAN,IAAYnB,eAAgB,OAA7F,SACI,cAAC,IAAD,MAEJ,mDAGJ,sBAAKnB,UAAU,YAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,oBAAIA,UAAU,oCAAd,SAAmDsC,EAAKnB,eAAeqE,OACvE,wBACIxF,UAAU,+BACVkC,QAAS,kBAAM4H,GAAc,IAFjC,SAII,cAAC,IAAD,MAGJ,eAAC,EAAD,CAAU/F,OAAQ8F,EAAYzF,UAAW0F,EAAejB,IAAI,OAAOC,MAAM,IAAzE,UACI,6BACI,yBACI9I,UAAU,oFACVkC,QAAS,kBAAM0H,GAAsB,IAFzC,UAGI,cAAC,IAAD,CAAQ5J,UAAU,SAHtB,aAOJ,6BACI,yBACIA,UAAU,oFACVkC,QAAS,WApGjCmB,QAAQC,IAAI,SAkGQ,UAGI,cAAC,IAAD,CAAatD,UAAU,SAH3B,aAQCsC,EAAK3B,KAAO2B,EAAKnB,eAAesJ,OAAuB,UAAdnI,EAAKrB,OAC/C,qCACI,oBAAIjB,UAAU,iCACd,6BACI,yBACIA,UAAU,mFACVkC,QAAS,kBAAMsH,GAAuB,IAF1C,UAGI,cAAC,IAAD,CAAkBxJ,UAAU,SAHhC,uBAapB,mBAAGA,UAAU,gBAAb,SAA8BsC,EAAKnB,eAAeJ,YAAcuB,EAAKnB,eAAeJ,YAAc,sBAEtG,oBAAIf,UAAU,8CAAd,qBACA,oBAAIA,UAAU,0CAAd,SAEQ+J,EAAQ7C,KAAI,SAACkD,EAAQjD,GACjB,OAAO,qBAAInH,UAAU,4BAAd,UACH,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,wBAAwB0K,IAAK3L,EAAUqL,EAAOpJ,QAAS2J,IAAI,oBAC1E,sBAAM3K,UAAS,kBAAasC,EAAK3B,KAAOyJ,EAAOvJ,IAAM,gBAAkB,gBAAxD,cAAf,SAAqGuJ,EAAOtJ,SAC3GsJ,EAAOvJ,MAAQyB,EAAKnB,eAAesJ,OAAS,cAAC,IAAD,CAAgBzK,UAAU,4BAE3E,sBAAKA,UAAU,+BAAf,UACI,wBAAQA,UAAU,eAAlB,SACI,cAAC,IAAD,OAGDsC,EAAK3B,KAAO2B,EAAKnB,eAAesJ,OAAuB,UAAdnI,EAAKrB,OAAqBmJ,EAAOvJ,MAAQyB,EAAK3B,IAEtF,wBAAQX,UAAU,oBAAoBkC,QAAS,kBA3IhD,SAAC0I,GAC5B,IAAMC,EAAU,CACZD,iBACAvD,UAAW/E,EAAKnB,eAAeN,KAEnCoE,EAAOe,KAAK,YAAa6E,GAsIwDC,CAAuBV,EAAOvJ,MAAnF,SACI,cAAC,IAAD,WAdsCsG,YC9D/D4D,EAlGQ,SAAC9G,GAAW,IAAD,EACNzE,qBAAWR,GAA7BsD,EADwB,EACxBA,KAAM/C,EADkB,EAClBA,QACR0F,EAASzF,qBAAW2F,GAFM,EAGA1F,mBAAS,IAHT,mBAGzB6F,EAHyB,KAGfY,EAHe,OAIFzG,oBAAS,GAJP,mBAIzBmI,EAJyB,KAIhBoD,EAJgB,KAgFhC,OAzEAxG,qBAAU,WACRwG,GAAW,GACX3K,IACGqG,IADH,UACU3H,EADV,mBAC4BuD,EAAK3B,KAC9BJ,MAAK,SAACC,GACL0F,EAAY1F,EAAII,MAChBoK,GAAW,MAEZC,SAAQ,WACPD,GAAW,QAEd,IAEHxG,qBAAU,WAqDR,OApDAS,EAAOU,GAAG,uBAAuB,SAACuF,GAChChF,GAAY,SAACN,GACX,IAAM0C,EAAoB1C,EAAY2C,WACpC,SAAC9C,GAAD,OAAaA,EAAQ5E,MAAQqK,EAAgBrK,OAE/C,IAA2B,IAAvByH,EAA0B,OAAO1C,EACrC,IAAIuF,GAAc,EAMlB,GALA5L,GAAQ,SAAC6L,GAGP,OAFIA,EAASjK,eAAeN,MAAQqK,EAAgBrK,MAClDsK,GAAc,GACTC,KAELD,EAAa,CACf,IAAM/C,EAAmB,CACvB7C,OAAQjD,EAAK3B,GACb0G,UAAW6D,EAAgBrK,KAI7B,OAFAR,IAAMC,KAAN,UAAcvB,EAAd,6BAAkDqJ,GAClDxC,EAAY0C,GAAmBlH,cAAcsH,aAAe,EACrD,YAAI9C,GAGb,OADAA,EAAY0C,GAAqB4C,EAC1B,YAAItF,SAGfX,EAAOU,GAAG,iBAAiB,SAAC0F,GAC1B9L,GAAQ,SAACyD,GAMP,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,YACRC,MAAQ,oBAENJ,EAAQ7B,eAAeN,MAAQwK,EAAexK,MAElDmC,EAAQ7B,eAAiB,IADhB,eAAK6B,MAIhBkD,GAAY,SAACN,GAAD,OACVA,EAAYuE,QAAO,SAAC1E,GAAD,OAAaA,EAAQ5E,MAAQwK,EAAexK,aAGnEoE,EAAOU,GAAG,aAAa,YAAkC,IAA/BsE,EAA8B,EAA9BA,aAAc5C,EAAgB,EAAhBA,UAClCiE,GAAiB,EACrB/L,GAAQ,SAACyD,GAEP,OADIA,EAAQrC,KAAOsJ,EAAapJ,MAAKyK,GAAiB,GAC/C,eAAKtI,MAEVsI,GACFpF,GAAY,SAACN,GAAD,OACVA,EAAYuE,QAAO,SAAC1E,GAAD,OAAaA,EAAQ5E,MAAQwG,WAG/C,WACLpC,EAAOY,IAAI,uBACXZ,EAAOY,IAAI,iBACXZ,EAAOY,IAAI,gBAEZ,IAGD,mCACkD,IAA/C0F,OAAOC,QAAQlJ,EAAKnB,gBAAgBiG,OACnC,cAAC,EAAD,CACI9B,SAAUA,EACVY,YAAaA,IAGjB,cAAC,EAAD,CACI0B,QAASA,EACTtC,SAAUA,EACVY,YAAaA,OCzEVuF,EAzBQ,SAACxH,GAEnB,OACI,gCAEG,qBAAKjE,UAAU,yGAAf,SAEI,oBAAIA,UAAU,yBAAd,uBAIJ,qBAAKA,UAAU,MAAf,SAEI,yBAAQA,UAAU,0FAAlB,UACI,qBAAKA,UAAU,oFACf,sBAAMA,UAAU,gBAAhB,8B,SCkKL0L,EArKQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAAc,EACtBpM,qBAAWR,GAA9BsD,EADyC,EACzCA,KAAO/C,EADkC,EAClCA,QADkC,EAELE,oBAAS,GAFJ,mBAE1CoM,EAF0C,KAE1BC,EAF0B,OAGDrM,oBAAS,GAHR,mBAG1CsM,EAH0C,KAGxBC,EAHwB,OAItB3M,cAAhB4M,EAJsC,sBAKrBxM,mBAAS6C,EAAKxB,QALO,mBAK1CA,EAL0C,KAKlCoL,EALkC,OAMvBzM,mBAAS6C,EAAK1C,OANS,mBAM1CA,EAN0C,KAMnCuM,EANmC,OAOnB1M,mBAAS,IAPU,mBAO1CuB,EAP0C,KAOjCoL,EAPiC,OAQJ3M,mBAAS,IARL,mBAQ1C4M,EAR0C,KAQzBC,EARyB,KAS3CC,EAAchI,mBA6BpB,OAPAC,qBAAU,WACFqH,IACAK,EAAU5J,EAAKxB,QACfqL,EAAS7J,EAAK1C,UAEnB,CAACmM,IAGA,sBACI/L,UAAS,kFADb,UAGI,eAAC8F,EAAD,CAAO/B,OAAQgI,EAAkB3H,UAAW4H,EAA5C,UACI,sBAAMhM,UAAU,yDAAhB,uBAIA,uBAAMgF,IAAKuH,EAAavM,UAAU,OAAlC,UACQ,sBAAKA,UAAU,gDAAf,UACI,qBAAKA,UAAU,aAAa0K,IAAK2B,GAAkC/J,EAAKtB,UACxE,uBACIQ,QAAQ,gBACRxB,UAAU,yGAFd,oBAMA,uBAAOW,GAAG,gBAAgBgB,KAAK,OAAO6K,QAAM,EAACzK,SA/BxC,SAAC5B,GAC1BiM,EAAWjM,EAAE6B,OAAOyK,MAAM,IAC1B,IAAMC,EAAaC,IAAIC,gBAAgBzM,EAAE6B,OAAOyK,MAAM,IACtDH,EAAkBI,IA4B+EG,OAAO,yCAExF,sBAAK7M,UAAU,gCAAf,UACI,uBACI+B,SAAU,SAAC5B,GAAD,OAAO+L,EAAU/L,EAAE6B,OAAOH,QACpCkE,WAAW,QACXpE,KAAK,OACL3B,UAAU,+EACV6B,MAAOf,IAEX,uBACIiB,SAAU,SAAC5B,GAAD,OAAOgM,EAAShM,EAAE6B,OAAOH,QACnCkE,WAAW,QACXpE,KAAK,QACL3B,UAAU,+EACV6B,MAAOjC,IAEX,mBACIkN,KAAK,IACL9M,UAAU,yGAFd,mCAQZ,wBACAA,UAAU,wEACVkC,QAAS,kBAxEK,SAAC/B,GACvB,IAAMS,EAAO,IAAImM,SACbnM,EAAKoM,OAAO,SAASlM,GAErBF,EAAKoM,OAAO,UAAUhM,GACtBJ,EAAKoM,OAAO,SAAS1K,EAAK3B,IAE9BN,IAAMC,KAAN,UAAcvB,EAAd,4BAAgD6B,GAC3CL,MAAK,SAAAC,GACF6C,QAAQC,IAAI9C,GACZjB,EAAQ,2BAAI+C,GAAL,IAAYtB,QAAO,UAAMjC,GAAN,OAAgByB,EAAII,YA8D/BqM,IAFf,qBAOJ,mCAAmB,YAAhBtB,EAA4B,cAAC,EAAD,IAAqB,cAAC,EAAD,MAEpD,gCACI,sBAAK3L,UAAU,wBAAf,UACI,wBACIA,UAAU,uDACVkC,QAAS,kBAAM0J,EAAQ,YAF3B,qBAMA,wBACI5L,UAAU,uDACVkC,QAAS,kBAAM0J,EAAQ,YAF3B,wBAQJ,oBACIkB,KAAK,IACL9M,UAAU,+FACVkC,QAAS,SAAC/B,GACNA,EAAEC,iBACF0L,GAAkB,IAL1B,UAQI,eAAC,EAAD,CACI/H,OAAQ8H,EACRzH,UAAW0H,EACXjD,IAAI,SACJC,MAAM,OAJV,UAMI,6BACI,yBACI9I,UAAU,8FACVkC,QAAS,kBAAM8J,GAAoB,IAFvC,UAII,cAAC,IAAD,CAAiBhM,UAAU,eAAeyB,KAAMyL,MAJpD,kBAQJ,6BACI,yBAAQlN,UAAU,8FAAlB,UACI,cAAC,IAAD,CAAWA,UAAU,iBADzB,eAKJ,oBAAIA,UAAU,iDACd,6BACI,yBACIA,UAAU,2GACVkC,QAAS,WACL+J,EAAa,CAAC,gBACdpH,OAAOsI,SAASC,UAJxB,UAOI,cAAC,IAAD,CAAUpN,UAAU,iBAPxB,iBAaR,sBAAKA,UAAU,oBAAf,UACI,qBACIA,UAAU,iBACV0K,IAAKpI,EAAKtB,QACV2J,IAAI,yBAER,sBAAM3K,UAAU,wBAAhB,SAAyCsC,EAAKxB,YAElD,cAAC,IAAD,CAAiBd,UAAU,gBAAgByB,KAAM4L,gBCtItDC,EAjCC,SAAC,GAAuE,IAArE3B,EAAoE,EAApEA,YAAcC,EAAsD,EAAtDA,QAAU2B,EAA4C,EAA5CA,iBAAmBC,EAAyB,EAAzBA,oBAEzD,OACI,qCACG,cAAC,IAAD,CAAYC,SAAS,SAArB,SAEI,cAAC,EAAD,CAAgB9B,YAAaA,EAAaC,QAASA,MAIvD,cAAC,IAAD,CAAY8B,SAAS,SAArB,SACI,sBAAK1N,UAAS,8HAAyHuN,EAAmB,mBAAqB,wBAA/K,UAEI,cAAC,EAAD,CAAgB5B,YAAaA,EAAaC,QAASA,IAG/C2B,GAEI,qBAAKvN,UAAU,oDAAoDkC,QAAS,kBAAMsL,GAAoB,IAAtG,SACI,wBACIxN,UAAU,gGACVkC,QAAS,kBAAMsL,GAAoB,IAFvC,SAGI,cAAC,IAAD,CAASxN,UAAU,4B,SCaxC2N,G,OArCC,SAAC,GAAmC,IAAlCrL,EAAiC,EAAjCA,KAAOiB,EAA0B,EAA1BA,QAAUqK,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAkBpC,OACG,qBAAI7N,UAAU,mBAAd,UACI,qBACIA,UAAU,oDACV0K,IAAG,UAAK3L,GAAL,OAAeuD,EAAKtB,SACvB2J,IAAK,MAET,sBAAK3K,UAAU,SAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAU,mCAAd,SAAkDsC,EAAKxB,SACvD,sBAAMd,UAAU,kCAAhB,SA1BS,WAGrB,IAFA,IAAM8N,EAAaF,EAAKG,MAAM,KACxBC,GAAa,IAAIC,MAAOC,qBAAqBH,MAAM,KAChD7F,EAAI,EAAIA,GAAK,EAAIA,IACtB4F,EAAW5F,GAAKiG,SAASL,EAAW5F,IACpC8F,EAAW9F,GAAKiG,SAASH,EAAW9F,IAGxC,GAAI4F,EAAW,KAAOE,EAAW,IAAMF,EAAW,KAAOE,EAAW,GAAG,CACnE,GAAIF,EAAW,KAAOE,EAAW,GAAI,MAAO,YACvC,GAAIF,EAAW,KAAOE,EAAW,GAAK,EAAG,MAAO,gBAGzD,OAAOJ,EAawDQ,GAAqB,IAAMP,OAElF,qBAAK7N,UAAU,uBAAf,SAAuCuD,YCNxC8K,EAzBG,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAEXU,EAAa,WAEf,IACMC,GAAsC,MAAvBX,EAAKY,MAAM,EAAE,GAAG,IAAY,EAAIZ,EAAKY,MAAM,EAAE,GAAK,EAAIZ,EAAKY,MAAM,EAAE,GAAK,EAE7F,MAAM,GAAN,OAHc,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAGlGD,GAAhB,YAAgCX,EAAKY,MAAM,EAAE,GAA7C,aAAoDZ,EAAKY,MAAM,EAAE,MAIpE,OAFDF,IAGK,qBAAItO,UAAU,yCAAd,UAEI,qBAAKA,UAAU,oCAEf,sBAAMA,UAAU,iFAAhB,SAAkGsO,MAElG,qBAAKtO,UAAU,oDCoHbyO,GA5HC,SAAC,GAA6B,IAA3BjB,EAA0B,EAA1BA,oBAEPlL,EAAS9C,qBAAWR,GAApBsD,KAFiC,EAGI7C,mBAAS,IAHb,mBAGlCiP,EAHkC,KAGjBC,EAHiB,KAInCC,EAAarK,mBACbU,EAASzF,qBAAW2F,GAE1BX,qBAAU,WACNS,EAAOU,GAAG,eAAe,SAACpC,IAC8C,IAAhEmL,EAAenG,WAAU,SAAAsG,GAAI,OAAIA,EAAKhO,MAAQ0C,EAAQ1C,QAC1D8N,GAAkB,SAAA9H,GAAG,4BAAQA,GAAR,CAAatD,YAGxC,IAEFiB,qBAAU,WACNnE,IAAMqG,IAAN,UAAa3H,EAAb,2BAAuCuD,EAAKnB,eAAeN,MAC1DN,MAAK,SAAAC,GAEFmO,EAAkBnO,EAAII,WAE5B,IAEF,IAwBMkO,EAAc,WAChB,IAAMvL,EAAUqL,EAAWjK,QAAQoK,UACnC,GAAKxL,EAAL,CAEA,IAAMyL,EAAsB,CACxBzJ,OAASjD,EAAK3B,GACd0G,UAAY/E,EAAKnB,eAAeN,IAChC0C,QAAUA,GAEdqL,EAAWjK,QAAQoK,UAAY,GAC/B9J,EAAOe,KAAK,cAAcgJ,GAC1B/J,EAAOe,KAAK,sBAAsB1D,EAAKnB,eAAeN,OAazD,OACI,sBAAKb,UAAU,8CAAf,UACG,sBAAKA,UAAU,yGAAf,UACI,cAAC,IAAD,CAAY0N,SAAS,SAArB,SAEI,wBAAQ1N,UAAU,oBAAoBkC,QAAS,kBAAMsL,GAAoB,IAAzE,SACI,cAAC,IAAD,QAIR,6BAAoD,IAA/CjC,OAAOC,QAAQlJ,EAAKnB,gBAAgBiG,OAAe9E,EAAKnB,eAAeqE,KAAO,sBAIhC,IAA/C+F,OAAOC,QAAQlJ,EAAKnB,gBAAgBiG,OACpC,qCACI,qBAAKpH,UAAU,2DAAf,SACI,oBAAIA,UAAU,uCAAd,SAjEa,WACjC,IAAMiP,EAAqB,GACrBC,EAAQR,EAAevE,QAAO,SAAA5G,GAAO,OAAIA,EAAQ8D,YAAc/E,EAAKnB,eAAeN,OAAKqG,KAAI,SAAA3D,GAAO,OAAIA,EAAQqK,KAAKY,MAAM,EAAE,MAC5HW,EAAQT,EAAevE,QAAO,SAAA5G,GAAO,OAAIA,EAAQ8D,YAAc/E,EAAKnB,eAAeN,OAAKqG,KAAI,SAAA3D,GAAO,OAAIA,EAAQqK,KAAKY,MAAM,EAAE,MAC5HY,EAAQV,EAAevE,QAAO,SAAA5G,GAAO,OAAIA,EAAQ8D,YAAc/E,EAAKnB,eAAeN,OAAKqG,KAAI,SAAA3D,GAAO,OAAIA,EAAQqK,KAAKY,MAAM,EAAE,OAC9HR,EAAakB,EAAI,GACjBG,EAAeF,EAAM,GACrBG,EAAeF,EAAM,GAazB,OAZAV,EAAevE,QAAO,SAAA5G,GAAO,OAAIA,EAAQ8D,YAAc/E,EAAKnB,eAAeN,OAAK0O,SAAQ,SAAChM,EAAS4D,GAC9F,IAAM2G,EAAavK,EAAQqK,KAAKY,MAAM,EAAE,GAClCgB,EAAejM,EAAQqK,KAAKY,MAAM,EAAE,GACpCiB,EAAelM,EAAQqK,KAAKY,MAAM,EAAE,IACtCV,IAAeE,GAAcwB,IAAiBH,GAAgBI,IAAiBH,IAC/EL,EAAmBhM,KAAK,cAACyM,EAAD,CAAwB9B,KAAMrK,EAAQqK,MAArBzG,IACzC6G,EAAakB,EAAI/H,GACjBkI,EAAeF,EAAMhI,GACrBmI,EAAeF,EAAMjI,IAEzB8H,EAAmBhM,KAAK,cAAC,EAAD,eAA+BM,GAAjBA,EAAQ1C,SAE3CoO,EA+CiBU,OAKR,sBAAK3P,UAAU,gGAAf,UACY,qBACI4P,gBAAgB,OAChB5K,IAAK4J,EACLiB,UAAW,SAAC1P,GAAD,OAtCd,SAACA,GAEZ,KAAdA,EAAE2P,UACN3P,EAAEC,iBACF0O,KAkCkDiB,CAAyB5P,IAC3CH,UAAU,yEAGlB,wBACIkC,QAAS,WApCrC4M,KAqC4B9O,UAAS,wIAFb,SAGI,cAAC,IAAD,YAOhB,sBAAKA,UAAU,mDAAf,UACI,oBAAIA,UAAU,WAAd,uBACA,6DCjHT2N,GAZC,SAAC1J,GAEZ,OACI,8BAEI,4CCsDE+L,GAtDC,SAAC/L,GAAW,IAAD,EAEExE,mBAAS,WAFX,mBAEhBwQ,EAFgB,KAETrE,EAFS,OAGwBnM,mBAAS,IAHjC,mBAGhByQ,EAHgB,aAI0BzQ,oBAAS,IAJnC,mBAIhB8N,EAJgB,KAIGC,EAJH,OAKIhO,qBAAWR,GAAvBO,GALQ,EAKf+C,KALe,EAKR/C,SA8Bd,OAXDiF,qBAAU,WACNjF,GAAQ,SAAAyD,GAMJ,OALAA,EAAQ5B,cAAc6B,KAAK,CACzBC,MAAQ,cAAC,IAAD,IACRC,MAAQ,WACRC,MAAK,kBAAcJ,EAAQlC,UAEtB,eAAIkC,QAEjB,IAGG,mCACG,sBAAKhD,UAAU,sEAAf,UAEI,cAAC,EAAD,CACIuN,iBAAkBA,EAClBC,oBAAqBA,EACrB7B,YAAasE,EACbrE,QAASA,IApCC,WACtB,OAAOqE,GACH,IAAK,UACD,OAAO,cAACE,GAAD,CACK3C,oBAAqBA,EACrBrM,eAAgB+O,IAEhC,IAAK,UACD,OAAO,cAACE,GAAD,IACX,QACI,OAAO,cAACD,GAAD,CACK3C,oBAAqBA,EACrBrM,eAAgB+O,KA2B1BG,S,UCbHC,GAhCO,SAACrM,GAAW,IAAD,EAEFzE,qBAAWR,GAA9BsD,EAFqB,EAErBA,KAAO/C,EAFc,EAEdA,QAgBd,OAZDiF,qBAAU,WAC4B,IAA9BlC,EAAKlB,cAAcgG,SACvBmJ,YAAW,WACPhR,GAAQ,SAAAyD,GAEJ,OADAA,EAAQ5B,cAAcoP,QACf,eAAIxN,QAEjB,KACFyN,eACApN,QAAQC,IAAI,gBACd,CAAChB,IAGE,oBAAI2G,MAAO,CAAEyH,OAAS,MAAQ1Q,UAAU,qDAAxC,SAEQsC,EAAKlB,cAAc8F,KAAI,WAAwBC,GAAW,IAAjCjE,EAAgC,EAAhCA,MAAQE,EAAwB,EAAxBA,MAAOD,EAAiB,EAAjBA,MAErC,OAAO,cAAC,EAAD,CAAiCD,MAAOA,EAAOE,MAAOA,EAAOD,MAAOA,GAA7CwN,sBClB5CC,GAAmB,CACrBjQ,GAAK,KACLG,OAAS,KACTlB,MAAQ,KACRmB,YAAc,KACdC,QAAU,KACVC,KAAO,KACPC,aAAc,EACdC,eAAiB,GACjBC,cAAgB,IAsELyP,GAnEH,SAAC5M,GAAU,MAQMxE,mBAASmR,IARf,mBAQZtO,EARY,KAQL/C,EARK,OAUkBF,cAVlB,mBAUTC,EAVS,KAUE2M,EAVF,KAsCnB,OA1BAzH,qBAAU,WACNnE,IAAMqG,IAAN,UAAa3H,EAAb,mBAAsC,CAAC+R,iBAAkB,IACpDvQ,MAAK,SAAAC,GACF,GAAiB,KAAbA,EAAII,KAAa,MAAM,IAAIF,MAC/BnB,EAAQ,CACJoB,GAAKH,EAAII,KAAKC,IACdC,OAASN,EAAII,KAAKE,OAClBlB,MAAQY,EAAII,KAAKhB,MACjBmB,YAAcP,EAAII,KAAKG,YACvBC,QAAUjC,EAAUyB,EAAII,KAAKI,QAC7BC,KAAOT,EAAII,KAAKK,KAChBC,aAAc,EACdC,eAAiB,GACjBC,cAAgB,KAIpB9B,EAAU,CAAC,eAAekB,EAAII,KAAKS,sBAEtCC,OAAM,SAAAC,GACHhC,EAAQqR,IACR3E,EAAa,CAAC,qBAGxB,IAGE,qBAAKjM,UAAU,oGAAf,SACI,cAACmF,EAAc4L,SAAf,CAAwBlP,MAAOoD,EAA/B,SACI,eAACjG,EAAY+R,SAAb,CAAsBlP,MAAO,CAACS,OAAO/C,WAArC,UAQI,cAAC,GAAD,IAEC+C,EAAKpB,YAMN,cAAC,GAAD,IAJA,cAAC,EAAD,YCxEpB8P,IAASC,OAAO,cAAC,GAAD,IAAUlK,SAASmK,cAAc,Y","file":"static/js/main.f29670c6.chunk.js","sourcesContent":["// REFAIRE LE BUILD POUR LA PRODUCTION\r\n\r\n// NODE JS\r\n// export const API_URL = 'http://localhost:5050/';\r\n// export const API_URL = 'https://chat-group-master.herokuapp.com/api/';\r\nexport const API_URL = '';\r\n\r\n// export const SOCKET_URL = 'http://localhost:5050';\r\n// export const SOCKET_URL = 'https://chat-group-master.herokuapp.com';\r\nexport const SOCKET_URL = '';\r\n","import React from 'react';\r\n\r\nexport const UserContext = React.createContext(null);\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope , faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { API_URL } from '../../../config';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n// GERER ERREUR INDEX PASSWORD\r\n                \r\n\r\nconst Login = ({isAlreadyMember}) => {\r\n\r\n    const [, setCookie] = useCookies();\r\n    const { setUser } = useContext(UserContext);\r\n    const [error , setError] = useState(false);\r\n    const [userAuth , setUserAuth] = useState({\r\n        email : '',\r\n        password : ''\r\n    })\r\n\r\n\r\n    const handleConnexion = () => {\r\n\r\n        axios.post(`${API_URL}user/signin`,userAuth)\r\n            .then(res => {\r\n                if (res.status === '') throw new Error();\r\n\r\n                setError(false); \r\n\r\n                setUser({\r\n                    id : res.data._id,\r\n                    pseudo : res.data.pseudo,\r\n                    email : res.data.email,\r\n                    description : res.data.description,\r\n                    picture : API_URL + res.data.picture,\r\n                    role : null,\r\n                    isConnected : true, \r\n                    currentChannel : {},\r\n                    notifications : []\r\n                })\r\n\r\n                setCookie(['REMEMBER_ME'],res.data.remember_me_token)\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h1 className='mb-8 text-4xl text-white uppercase'>Login</h1>\r\n            <form className='w-full' noValidate onSubmit={e => {\r\n                e.preventDefault()\r\n                handleConnexion()\r\n            }}>\r\n                <div className=\"authInputWrapper mb-5\">\r\n                    <label htmlFor='emailLogin' className='cursor-pointer'>\r\n                        <FontAwesomeIcon className='text-gray-600 text-2xl m-4' icon={faEnvelope} />\r\n                    </label>\r\n\r\n                    <input  id='emailLogin' type=\"email\" className=\"authInput\" placeholder='Email' value={userAuth.email} autoComplete='on'\r\n                            onChange={e => setUserAuth({...userAuth , 'email' : e.target.value})}/>           \r\n                </div>\r\n            \r\n                <div className=\"authInputWrapper mb-5\">\r\n                    <label htmlFor='passwordLogin' className='cursor-pointer'>\r\n                        <FontAwesomeIcon className='text-gray-600 text-2xl m-4 cursor-pointer' icon={faLock} />\r\n                    </label>\r\n\r\n                    <input  id='passwordLogin' type=\"password\" className=\"authInput\" placeholder='Password' value={userAuth.password} \r\n                            onChange={e => setUserAuth({...userAuth , 'password' : e.target.value})}/>           \r\n                </div>\r\n\r\n                {error && <p className='text-red-400'>Email or password incorrect</p>}\r\n\r\n                <button className='authBtn w-full bg-blue-700 hover:bg-opacity-80' type='submit'>Connexion</button>\r\n            </form>\r\n\r\n            <button className='authBtn p-8 bg-green-700 hover:bg-opacity-80' onClick={() => isAlreadyMember(false)}>Register</button>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","import React, { useContext, useState } from 'react';\r\nimport { API_URL } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faLock, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { BsBookmarkCheck } from 'react-icons/bs';\r\nimport { UserContext } from '../../../context/UserContext';\r\n\r\nconst Signup = ({ isAlreadyMember , setIsAlreadyMember , setIsOpenPopupSuccess }) => {\r\n\r\n    const [isOpenPopupError, setIsOpenPopupError] = useState(false);\r\n    const { user , setUser} = useContext(UserContext);\r\n\r\n    const handeSignup = (user) => {\r\n        axios.post(`${API_URL}user/signup`, user)\r\n            .then(res => {\r\n                if (res.status !== 200) throw new Error('ceci est une erreur')\r\n                setIsAlreadyMember(true);\r\n                \r\n                setUser(oldUser => {\r\n                    oldUser.notifications.push({\r\n                      icons : <BsBookmarkCheck />,\r\n                      color : 'green-500',\r\n                      label : 'Sign Up Successful'\r\n                    })\r\n                    return {...oldUser}\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log('ERROR ---- ' + err.message);\r\n            })\r\n    }\r\n\r\n    const userSignup = useFormik({\r\n        initialValues: {\r\n            pseudo: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            pseudo: Yup.string()\r\n                .required('Required'),\r\n\r\n            email: Yup.string()\r\n                .required('Email address is required')\r\n                .email('Invalid email address'),\r\n\r\n            password: Yup.string()\r\n                .required('Password is required'),\r\n\r\n            confirmPassword: Yup.string()\r\n                .required('Please confirm your password')\r\n                .oneOf([Yup.ref('password'), null], 'Password must matched')\r\n        }),\r\n        onSubmit: values => {\r\n            const user = {\r\n                pseudo: values.pseudo,\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n            handeSignup(user);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h1 className='mb-8 text-4xl text-white uppercase'>Sign Up</h1>\r\n            <form onSubmit={userSignup.handleSubmit} className='w-full' autoComplete='off'>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='pseudo' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faUser} className='text-gray-600 text-2xl m-4' />\r\n                        </label>\r\n                        <input\r\n                            id='pseudo'\r\n                            type=\"text\"\r\n                            className=\"authInput\"\r\n                            placeholder='Full Name'\r\n                            {...userSignup.getFieldProps('pseudo')} />\r\n                    </div>\r\n                    {\r\n                        userSignup.touched.pseudo && userSignup.errors.pseudo &&\r\n\r\n                        <p className='text-red-400'>{userSignup.errors.pseudo}</p>\r\n\r\n                    }\r\n                </div>\r\n\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='Email' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faEnvelope} className='text-gray-600 text-2xl m-4' />\r\n                        </label>\r\n                        <input\r\n                            id='Email'\r\n                            type=\"text\"\r\n                            className=\"authInput\"\r\n                            placeholder='Email'\r\n                            {...userSignup.getFieldProps('email')} />\r\n                    </div>\r\n                    {\r\n                        userSignup.touched.email && userSignup.errors.email &&\r\n\r\n                        <p className='text-red-400'>{userSignup.errors.email}</p>\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='Password' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faLock} className='text-gray-600 text-2xl m-4' />\r\n                        </label>\r\n                        <input\r\n                            id='Password'\r\n                            type=\"password\"\r\n                            className=\"authInput\"\r\n                            placeholder='Password'\r\n                            {...userSignup.getFieldProps('password')} />\r\n                    </div>\r\n                    {\r\n                        userSignup.touched.password && userSignup.errors.password &&\r\n\r\n                        <p className='text-red-400'>{userSignup.errors.password}</p>\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className='mb-5'>\r\n                    <div className=\"authInputWrapper\">\r\n                        <label htmlFor='ConfirmPassword' className='cursor-pointer'>\r\n                            <FontAwesomeIcon icon={faLock} className='text-gray-600 text-2xl m-4' />\r\n                        </label>\r\n                        <input\r\n                            id='ConfirmPassword'\r\n                            type=\"password\"\r\n                            className=\"authInput\"\r\n                            placeholder='Confirm password'\r\n                            {...userSignup.getFieldProps('confirmPassword')} />\r\n                    </div>\r\n                    {\r\n                        userSignup.touched.confirmPassword && userSignup.errors.confirmPassword &&\r\n\r\n                        <p className='text-red-400'>{userSignup.errors.confirmPassword}</p>\r\n\r\n                    }\r\n                </div>\r\n\r\n                <button className='authBtn w-full bg-blue-700 hover:bg-opacity-80' type='submit'>Sign Up</button>\r\n\r\n            </form>\r\n\r\n            <button className='authBtn p-8 bg-green-700 hover:bg-opacity-80' onClick={() => isAlreadyMember(true)}>Connexion</button>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst NotificationItem = ({ label, icons, color, isOpen }) => {\r\n\r\n    const [numberOfPopup , setNumberOfPopup] = useState(0);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <li\r\n                className={`p-6 border-2 border-${color} text-${color} \r\n                            bg-gray-100 flex items-center rounded \r\n                            z-50 transition duration-500 transform ease-in-out translate-y-0 mb-2\r\n                            ${isOpen ? 'translate-y-0' : '-transelate-y-full'}`}\r\n            >\r\n\r\n                <div className='text-2xl mr-4'>{icons}</div>\r\n\r\n                <span className='font-semibold'>{label}</span>\r\n\r\n            </li>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default NotificationItem;","import React, { useState } from 'react';\r\nimport Login from './Login/Login';\r\nimport Signup from './Signup/Signup';\r\nimport Popup from '../../components/Utils/Notifications/NotificationItem';\r\n\r\nconst Authentication = (props) => {\r\n\r\n    const [isAlreadyMember , setIsAlreadyMember] = useState(true);\r\n    const [isOpenPopupSuccess, setIsOpenPopupSuccess] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='p-8 rounded-xl flex flex-col items-center justify-center w-96 shadow-2xl border border-gray-700 bg-gray-800'>\r\n                    {\r\n\r\n                        isAlreadyMember ?\r\n\r\n                            <Login isAlreadyMember={setIsAlreadyMember} />\r\n\r\n                            :\r\n\r\n                            <Signup isAlreadyMember={setIsAlreadyMember} setIsAlreadyMember={setIsAlreadyMember} setIsOpenPopupSuccess={setIsOpenPopupSuccess} />\r\n\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Authentication;","import React, { useRef , useEffect } from 'react';\r\n\r\nconst Popup = ({ children , isOpen , setIsOpen , text }) => {\r\n\r\n    const popupRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const isOpenCopy = isOpen;\r\n        const focusModal = (e) => {\r\n            if (!popupRef.current) return;\r\n            if (!popupRef.current.contains(e.target) && isOpenCopy) {\r\n                setIsOpen(false)  \r\n            } \r\n        }\r\n\r\n        window.addEventListener('mousedown',focusModal)\r\n        return () => {\r\n            window.removeEventListener('mousedown',focusModal)\r\n        }\r\n    },[isOpen])\r\n\r\n    return (\r\n        <div className={`absolute w-full h-full bg-black bg-opacity-50 transition z-50 duration-200 transform ${isOpen ? 'opacity-100 z-50' : 'opacity-0 pointer-events-none'} flex items-center justify-center`}>\r\n\r\n            <div ref={popupRef} className={`text-white bg-black-1100 h-auto w-auto p-6 rounded-xl transition delay-75 duration-200 ease transform ${isOpen ? 'scale-100 opacity-100' : 'opacity-0 scale-0'}`}>\r\n\r\n                {text && <p className='w-40 mb-4 text-center m-auto text-lg italic'>{text}</p>} \r\n\r\n                {children}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup;","import { createContext } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { SOCKET_URL } from '../config';\r\n\r\nexport const socket = io((SOCKET_URL));   \r\nexport const SocketContext = createContext();\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport Modal from '../../../../../../components/Utils/Modal';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport { SocketContext } from '../../../../../../context/SocketContext';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst CreateChannelModal = ({ isOpen, setIsOpen, channels, addChannel }) => {\r\n\r\n    const socket = useContext(SocketContext);\r\n    const { user , setUser } = useContext(UserContext);\r\n    const [channel, setChannel] = useState({\r\n        userID: user.id,\r\n        name: '',\r\n        description: ''\r\n    })\r\n\r\n    const createChannel = () => {\r\n\r\n        socket.emit('createChannel', channel);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('createChannel', ({ userID, channel }) => {\r\n            setUser(oldUser => {\r\n                oldUser.notifications.push({\r\n                  icons : <FiCheckCircle />,\r\n                  color : 'green-500',\r\n                  label : `Channel ${channel.name} create`\r\n                })\r\n                return {...oldUser}\r\n            })\r\n            setIsOpen(false)\r\n            setChannel({\r\n                userID: user.id,\r\n                name: '',\r\n                description: ''\r\n            })\r\n            if (userID !== user.id) return;\r\n            addChannel(oldChannels => [...oldChannels, channel]);\r\n        })\r\n\r\n        return () => {\r\n            socket.off('createChannel')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\r\n            <h4 className='text-white font-semibold mb-7'>NEW CHANNEL</h4>\r\n            <div>\r\n                <input className='bg-InputCreateChannel rounded-md mb-5 p-2 w-full ctmFocus' type=\"text\" id=\"\"\r\n                    value={channel.name}\r\n                    onChange={e => setChannel({ ...channel, 'name': e.target.value })}\r\n                />\r\n\r\n                <textarea className='bg-InputCreateChannel rounded-md mb-5 p-2  w-full h-24 resize-none ctmFocus leading-4'\r\n                    spellCheck='false'\r\n                    value={channel.description}\r\n                    onChange={e => setChannel({ ...channel, 'description': e.target.value })}\r\n                ></textarea>\r\n\r\n                <button className='bg-blue-600 rounded-md py-1 px-6 text-white ctmFocus hover:bg-blue-700 float-right'\r\n                    onClick={() => createChannel()}\r\n                >Save</button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateChannelModal;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport { SocketContext } from '../../../../../../context/SocketContext';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../../../../../config'; \r\nimport './openAnimation.css';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst ChannelSearch = ({ channels , setChannels }) => {\r\n\r\n    const [openSearchList , setOpenSearchList] = useState(false);\r\n    const [channelFind , setChannelFind] = useState([]);\r\n    const { user , setUser } = useContext(UserContext);\r\n    const SearchListRef = useRef();\r\n    const SearchInput = useRef();\r\n    const socket = useContext(SocketContext)\r\n\r\n    const handleLoadDataChannel = () => {\r\n        axios.get(`${API_URL}channel/search/${user.id}`)\r\n        .then(res => {\r\n            setChannelFind(res.data)\r\n        })\r\n    }\r\n    \r\n    const handleSearchChannel = () => {\r\n        setOpenSearchList(true);\r\n        handleLoadDataChannel()\r\n    }\r\n\r\n    const handleJoinChannel = (channelID) => {\r\n        const infos = {\r\n            userID : user.id,\r\n            channelID\r\n        }\r\n\r\n        socket.emit('joinChannel',infos)\r\n    }\r\n    useEffect(() => {\r\n        socket.on('joinChannel',({ joinedUser , joinedChannel }) => {\r\n            setUser(oldUser => {\r\n                oldUser.notifications.push({\r\n                  icons : <FiCheckCircle />,\r\n                  color : 'green-500',\r\n                  label : `Channel ${joinedChannel.name} joined`\r\n                })\r\n                return {...oldUser}\r\n              })\r\n            handleLoadDataChannel()\r\n            setOpenSearchList(false)\r\n            if (joinedUser._id !== user.id) return;\r\n            setChannels(old => [...old, joinedChannel])\r\n        })    \r\n\r\n        return () => {\r\n            socket.off('joinChannel')\r\n        }\r\n    },[])\r\n\r\n    const returnFindChannel = () => {\r\n        const channels = [];\r\n        channelFind.map((channel, index) => {\r\n            channels.push(  <li key={channel._id} className={`w-full flex items-center ${index !== channelFind.length -1 && 'border-b'} bg-gray-600 bg-opacity-70 transition duration-200 hover:bg-opacity-100`}>\r\n                                <button className='flex p-3 w-full ctmFocus items-center' onClick={() => handleJoinChannel(channel._id)}>\r\n                                    <div className='h-7 w-7 bg-red-400 rounded-md mr-4 flex items-center justify-center'>{channel.name[0]}</div>\r\n                                    <span>{channel.name}</span>\r\n                                </button>\r\n                            </li>\r\n                        )  \r\n        })\r\n        return channels;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleCloseSearchList = (e) => {\r\n            (!SearchListRef.current.contains(e.target) && !SearchInput.current.contains(e.target)) && setOpenSearchList(false)\r\n        }\r\n        document.addEventListener('mousedown',handleCloseSearchList)\r\n        return () => {\r\n            document.removeEventListener('mousedown',handleCloseSearchList)\r\n        }\r\n    },[openSearchList])\r\n\r\n     return (\r\n         <>\r\n            <div className='px-4'>\r\n                <div className='p-2 h-14 relative' ref={SearchInput}>\r\n                        <label htmlFor='search' className='absolute text-white top-4 left-4 cursor-pointer'><FontAwesomeIcon icon={faSearch}/></label>\r\n                        <input id='search' type='search' autoComplete='off' \r\n                            className='focus:outline-none h-full w-full rounded-md p-1 pl-10 inputSearch leading-10 ctmFocus' \r\n                            placeholder='Search'\r\n                            onFocus={() => handleSearchChannel()}\r\n                        />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full\">\r\n                <div className={`absolute w-full px-4 overflow-hidden rounded-lg ${openSearchList ? 'z-50' : 'z-index--1'}`} ref={SearchListRef}>\r\n                    <ul className={`w-full bg-gray-500 rounded-lg transiton duration-200 ease-in-out opacity-0 overflow-hidden ${openSearchList && 'opacity-100'}`}>\r\n                        {\r\n                            returnFindChannel()\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n     )\r\n\r\n}\r\n\r\nexport default ChannelSearch;","import React from 'react';\r\n\r\nconst NavHead = (props) => {\r\n\r\n     return (\r\n        <div className={`shadow-lg h-16 flex-shrink-0 text-gray-100 font-bold text-lg px-6 flex items-center ${props.className}`}>\r\n         \r\n            <span>{props.title}</span>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default NavHead;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CreateChannelModal from \"../ModalCreateChannel/CreateChannelModal\";\r\nimport ChannelSearch from \"../ChannelSearch/ChannelSearch\";\r\nimport NavHead from \"../../../../../../components/NavComponents/NavHead\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { RiGroupLine } from 'react-icons/ri';\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../../../../../config\";\r\nimport { UserContext } from \"../../../../../../context/UserContext\";\r\nimport { SocketContext } from \"../../../../../../context/SocketContext\";\r\nimport \"./scrollbar.css\";\r\nimport Popup from \"../../../../../../components/Utils/Notifications/NotificationItem\";\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst ChannelHome = ({ loading, channels, setChannels }) => {\r\n  const [isOpenChannelModal, setIsOpenChannelModal] = useState(false);\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [isOpenJoinedChannel, setIsOpenJoinedChannel] = useState(false);\r\n  const [isOpenCreateChannel , setIsOpenCreateChannel] = useState(false);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const channelLoadingSkelett = () => {\r\n    const skelettList = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      skelettList.push(\r\n        <div\r\n          key={i}\r\n          className=\"flex items-center mb-4 cursor-pointer w-full p-2 rounded-lg animate-pulse\"\r\n        >\r\n          <div className=\"w-8 h-8 rounded-md bg-gray-400 mr-3\"></div>\r\n          <div className=\"w-44 h-8 rounded-md bg-gray-400\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    return skelettList;\r\n  };\r\n\r\n  const handleEnterInChannel = (channel) => {\r\n    setUser({ ...user, currentChannel: channel });\r\n    const resetNotifObject = {\r\n      userID: user.id,\r\n      channelID: channel._id,\r\n    };\r\n    axios\r\n      .post(`${API_URL}channel/resetnotification`, resetNotifObject)\r\n      .then((res) => {\r\n        setChannels((oldChannels) => {\r\n          const channelNotifReset = res.data;\r\n          const indexChannelNotif = oldChannels.findIndex(\r\n            (channel) => channel._id === channelNotifReset._id\r\n          );\r\n          oldChannels[indexChannelNotif] = channelNotifReset;\r\n          return [...oldChannels];\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR : \" + err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <button onClick={() => setUser(oldUser => {\r\n        oldUser.notifications.push({\r\n          icons : <FiCheckCircle />,\r\n          color : 'green-500',\r\n          label : 'Salut ceci est un test'\r\n        })\r\n        return {...oldUser}\r\n      })}>ADD NOTIF</button>\r\n      \r\n      {/* <button onClick={() => setUser(oldUser => ({\r\n        user : [{icons : <FiCheckCircle />,\r\n                color : 'green-500',\r\n                label : 'Salut ceci est un test'}\r\n              ,...oldUser.notifications]\r\n      }))}>ADD NOTIF</button> */}\r\n\r\n      {/* CREATE CHANNEL MODAL */}\r\n      <CreateChannelModal\r\n        setIsOpenCreateChannel={setIsOpenCreateChannel}    \r\n        isOpen={isOpenChannelModal}\r\n        setIsOpen={setIsOpenChannelModal}\r\n        channels={channels}\r\n        addChannel={setChannels}\r\n      />\r\n      {/* ---------- */}\r\n      \r\n      <NavHead title=\"Channel\" className=\"justify-between\">\r\n        <button\r\n          onClick={() => setIsOpenChannelModal(true)}\r\n          className=\"channelIcon p-1 rounded-md ctmFocus hoverMenuProfileBg\"\r\n        >\r\n          <IoMdAdd className=\"text-white\" />\r\n        </button>\r\n      </NavHead>\r\n\r\n      <ChannelSearch\r\n        setIsOpenJoinedChannel={setIsOpenJoinedChannel}\r\n        channels={channels}\r\n        setChannels={setChannels}\r\n      />\r\n\r\n      <div className=\"p-4 overflow-y-scroll scrollbar h-full\">\r\n        {loading\r\n          ? channelLoadingSkelett()\r\n          : channels.map((channel, index) => {\r\n              return (\r\n                <button\r\n                  key={channel._id}\r\n                  onClick={() => handleEnterInChannel(channel)}\r\n                  className={`flex items-center ${\r\n                    index !== channels.length - 1 && \"mb-4\"\r\n                  } relative cursor-pointer w-full ctmFocus hoverMenuProfileBg p-2 rounded-lg`}\r\n                >\r\n                  {channel.notifications.map((notif, index) => {\r\n                    return (\r\n                      notif.notification !== 0 &&\r\n                      notif.userID === user.id && (\r\n                        <div\r\n                          key={index}\r\n                          className=\"absolute h-6 w-6 bg-red-800 rounded-full flex items-center justify-center -left-1 -top-1 shadow-xl\"\r\n                        >\r\n                          <div className=\"absolute z-0 animate-ping h-4/5 w-4/5 bg-red-800 rounded-full\"></div>\r\n                          <span className=\"text-white z-10 text-sha text-xs\">\r\n                            {notif.notification > 99\r\n                              ? \"99+\"\r\n                              : notif.notification}\r\n                          </span>\r\n                        </div>\r\n                      )\r\n                    );\r\n                  })}\r\n                  <div className=\"w-8 h-8 channelIcon mr-3 rounded-md flex items-center justify-center text-white uppercase\">\r\n                    {channel.name[0]}\r\n                  </div>\r\n                  <span className=\"text-gray-300 uppercase\">\r\n                    {channel.name}\r\n                  </span>\r\n                </button>\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelHome;\r\n","import React, { useRef , useEffect } from 'react';\r\n\r\nconst Dropdown = ({ children , isOpen , setIsOpen , left , top , right , bottom }) => {\r\n\r\n    const DropdownRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const isOpenCopy = isOpen;\r\n        const focusModal = (e) => {\r\n            if (!DropdownRef.current) return;\r\n            if (!DropdownRef.current.contains(e.target) && isOpenCopy) {\r\n                setIsOpen(false)  \r\n            } \r\n        }\r\n\r\n        window.addEventListener('mousedown',focusModal)\r\n        return () => {\r\n            window.removeEventListener('mousedown',focusModal)\r\n        }\r\n    },[isOpen])\r\n\r\n     return (\r\n        <div ref={DropdownRef}\r\n            style={{left : left || 'unset', top : top || 'unset',  right : right || 'unset' , bottom : bottom || 'unset' }}\r\n            className={`w-48 bg-black-700 absolute rounded-xl p-3 transition duration-200 opacity-0 transform ${isOpen ? 'scale-100 opacity-100' : 'scale-0 opacity-0'}`}>\r\n            <ul className='flex flex-col justify-evenly h-full text-left text-white'>\r\n\r\n                {children}\r\n\r\n            </ul>\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\n\r\nconst Button = ({ children , bg , txt , click , className }) => {\r\n\r\n     return (\r\n        <button \r\n            className={`px-5 py-2 ${bg} ${txt} ${className} m-2 ctmFocus transition duration-200 hover:bg-opacity-70 rounded`}\r\n            onClick={click}\r\n            >{children}\r\n        </button>\r\n     )\r\n\r\n}\r\n\r\nexport default Button;","import React, { useContext, useEffect, useState } from 'react';\r\nimport NavHead from '../../../../../../components/NavComponents/NavHead';\r\nimport Drowdown from '../../../../../../components/Utils/Dropdown';\r\nimport Modal from '../../../../../../components/Utils/Modal';\r\nimport Button from '../../../../../../components/Button/Button';\r\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\r\nimport { API_URL } from '../../../../../../config';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../../../../../context/UserContext';\r\nimport { SocketContext } from '../../../../../../context/SocketContext';\r\nimport { ImExit } from 'react-icons/im';\r\nimport { RiEdit2Fill, RiUser3Fill, RiVipCrownFill, RiDeleteBin5Fill } from 'react-icons/ri';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { IoBan } from 'react-icons/io5';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst CurrentChannel = ({ channels, setChannels }) => {\r\n\r\n    const socket = useContext(SocketContext);\r\n    const [isOpenConfirmDelete, setIsOpenConfirmDelete] = useState(false);\r\n    const [isOpenPopupBannedMember, setIsOpenPopupBannedMember] = useState(false)\r\n    const [isOpenConfirmLeave, setIsOpenConfirmLeave] = useState(false);\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n    const [members, setMembers] = useState([]);\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const handleLeaveChannel = () => {\r\n        const leaveChannelInfo = {\r\n            userID: user.id,\r\n            channelID: user.currentChannel._id\r\n        }\r\n\r\n        socket.emit('leaveChannel', leaveChannelInfo)\r\n    }\r\n\r\n    const handleDeleteChannel = () => {\r\n        socket.emit('deleteChannel', user.currentChannel._id)\r\n    }\r\n\r\n    const handleEditChannel = () => {\r\n        console.log('edit')\r\n    }\r\n\r\n    const handleBanChannelMember = (bannedMemberID) => {\r\n        const banInfo = {\r\n            bannedMemberID,\r\n            channelID: user.currentChannel._id\r\n        }\r\n        socket.emit('banMember', banInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('joinChannel', ({ joinedUser, joinedChannel }) => {\r\n            if (user.currentChannel._id !== joinedChannel._id) return;\r\n            setMembers(old => [...old, joinedUser]);\r\n        })\r\n        socket.on('banMember', ({ bannedMember, channelID }) => {\r\n            if (bannedMember._id === user.id && channelID === user.currentChannel._id) setIsOpenPopupBannedMember(true);\r\n            if (channelID === user.currentChannel._id) setMembers(oldMembers => oldMembers.filter(member => member._id !== bannedMember._id));\r\n        })\r\n        socket.on('leaveChannel', ({ leaveMember, channelID }) => {\r\n            setUser(oldUser => {\r\n                oldUser.notifications.push({\r\n                  icons : <FiCheckCircle />,\r\n                  color : 'green-500',\r\n                  label : 'Channel leave'\r\n                })\r\n                return {...oldUser}\r\n            })\r\n            if (leaveMember._id === user.id) {\r\n                setChannels(oldChannels => oldChannels.filter(channel => channel._id !== channelID))\r\n                setUser({ ...user, currentChannel: {} })\r\n            }\r\n            if (channelID === user.currentChannel._id) setMembers(oldMembers => oldMembers.filter(member => member._id !== leaveMember._id));\r\n        })\r\n        axios.get(`${API_URL}channel/user/${user.currentChannel._id}`)\r\n            .then(res => {\r\n                setMembers(res.data);\r\n            })\r\n        return () => {\r\n            socket.off('joinChannel')\r\n            socket.off('banMember')\r\n            socket.off('leaveChannel')\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpenPopupBannedMember} setIsOpen={setIsOpenPopupBannedMember}>\r\n                <h3>Your are banned from this channel</h3>\r\n                <div>\r\n                    <Button click={() => setUser({ ...user, currentChannel: {} })}>Oh shit</Button>\r\n                    <Button click={() => setUser({ ...user, currentChannel: {} })}>Nice</Button>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal isOpen={isOpenConfirmDelete} setIsOpen={setIsOpenConfirmDelete} text='Are you sure you delete this channel?'>\r\n                <div className=\"flex items-center justify-around\">\r\n                    <Button click={() => setIsOpenConfirmDelete(false)}>Cancel</Button>\r\n                    <Button className='border border-red-500 hover:bg-red-500 hover:text-white' txt='text-red-500' click={() => handleDeleteChannel()}>Delete</Button>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal isOpen={isOpenConfirmLeave} setIsOpen={setIsOpenConfirmLeave} text='Are you sure you leave the channel?'>\r\n                <div className=\"flex items-center justify-around\">\r\n                    <Button click={() => setIsOpenConfirmLeave(false)}>Cancel</Button>\r\n                    <Button className='border border-red-500 hover:bg-red-500 hover:text-white' txt='text-red-500' click={() => handleLeaveChannel()}>Leave</Button>\r\n                </div>\r\n            </Modal>\r\n\r\n            <NavHead classNasme='justify-start flex-shrink-0'>\r\n                <button className='text-2xl ctmFocus mr-3' onClick={() => setUser({ ...user, currentChannel: {} })}>\r\n                    <HiOutlineChevronLeft />\r\n                </button>\r\n                <span>All channels</span>\r\n            </NavHead>\r\n\r\n            <div className=\"px-6 py-4\">\r\n                <div className='flex justify-between items-center mb-2 relative'>\r\n                    <h3 className='uppercase text-gray-300 font-bold'>{user.currentChannel.name}</h3>\r\n                    <button\r\n                        className='text-white text-2xl ctmFocus'\r\n                        onClick={() => setIsOpenMenu(true)}\r\n                    >\r\n                        <BiChevronDown />\r\n                    </button>\r\n\r\n                    <Drowdown isOpen={isOpenMenu} setIsOpen={setIsOpenMenu} top='25px' right='0'>\r\n                        <li>\r\n                            <button\r\n                                className='w-full ctmFocus flex items-center text-gray-200 hoverMenuProfileBg p-2 rounded-lg'\r\n                                onClick={() => setIsOpenConfirmLeave(true)}>\r\n                                <ImExit className='mr-3' />\r\n                                LEAVE\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                className='w-full ctmFocus flex items-center hoverMenuProfileBg p-2 rounded-lg text-gray-200'\r\n                                onClick={() => handleEditChannel()}>\r\n                                <RiEdit2Fill className='mr-3' />\r\n                                EDIT\r\n                            </button>\r\n                        </li>\r\n                        {\r\n                            (user.id === user.currentChannel.owner || user.role === 'admin') &&\r\n                            <>\r\n                                <li className='border-b border-gray-500 m-2'></li>\r\n                                <li>\r\n                                    <button\r\n                                        className='w-full ctmFocus flex items-center hoverMenuProfileBg p-2 rounded-lg text-red-500'\r\n                                        onClick={() => setIsOpenConfirmDelete(true)}>\r\n                                        <RiDeleteBin5Fill className='mr-3' />\r\n                                        DELETE\r\n                                    </button>\r\n                                </li>\r\n                            </>\r\n                        }\r\n\r\n                    </Drowdown>\r\n\r\n                </div>\r\n                <p className='text-gray-300'>{user.currentChannel.description ? user.currentChannel.description : 'no description'}</p>\r\n            </div>\r\n            <h3 className='uppercase text-gray-300 font-bold px-6 py-4'>Members</h3>\r\n            <ul className='overflow-y-scroll scrollbar h-full px-4'>\r\n                {\r\n                    members.map((member, index) => {\r\n                        return <li className='mb-4 flex justify-between' key={index}>\r\n                            <div className='flex items-center p-2'>\r\n                                <img className='w-9 h-9  mr-5 rounded' src={API_URL + member.picture} alt='profile picture' />\r\n                                <span className={`text-lg ${user.id === member._id ? 'text-gray-300' : 'text-gray-400'} font-bold`}>{member.pseudo}</span>\r\n                                {member._id === user.currentChannel.owner && <RiVipCrownFill className='ml-2 text-yellow-500' />}\r\n                            </div>\r\n                            <div className='flex items-center text-white'>\r\n                                <button className='ctmFocus p-1'>\r\n                                    <RiUser3Fill />\r\n                                </button>\r\n\r\n                                {((user.id === user.currentChannel.owner || user.role === 'admin') && member._id !== user.id) &&\r\n\r\n                                    <button className='ml-4 ctmFocus p-1' onClick={() => handleBanChannelMember(member._id)}>\r\n                                        <IoBan />\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CurrentChannel;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ChannelHome from \"./ChannelHome/ChannelHome\";\r\nimport CurrentChannel from \"./CurrentChannel/CurrentChannel\";\r\nimport { UserContext } from \"../../../../../context/UserContext\";\r\nimport { SocketContext } from \"../../../../../context/SocketContext\";\r\nimport { API_URL } from \"../../../../../config\";\r\nimport axios from \"axios\";\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst NavChannelMode = (props) => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const socket = useContext(SocketContext);\r\n  const [channels, setChannels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // CHARGER SEULEMENT AU MONTAGE\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${API_URL}channel/${user.id}`)\r\n      .then((res) => {\r\n        setChannels(res.data);\r\n        setLoading(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"channelNotification\", (channelNotified) => {\r\n      setChannels((oldChannels) => {\r\n        const indexChannelNotif = oldChannels.findIndex(\r\n          (channel) => channel._id === channelNotified._id\r\n        );\r\n        if (indexChannelNotif === -1) return oldChannels;\r\n        let sameChannel = false;\r\n        setUser((oldsUser) => {\r\n          if (oldsUser.currentChannel._id === channelNotified._id)\r\n            sameChannel = true;\r\n          return oldsUser;\r\n        });\r\n        if (sameChannel) {\r\n          const resetNotifObject = {\r\n            userID: user.id,\r\n            channelID: channelNotified._id,\r\n          };\r\n          axios.post(`${API_URL}channel/resetnotification`, resetNotifObject);\r\n          oldChannels[indexChannelNotif].notifications.notification = 0;\r\n          return [...oldChannels];\r\n        }\r\n        oldChannels[indexChannelNotif] = channelNotified;\r\n        return [...oldChannels];\r\n      });\r\n    });\r\n    socket.on(\"deleteChannel\", (deletedChannel) => {\r\n      setUser((oldUser) => {\r\n        oldUser.notifications.push({\r\n          icons : <FiCheckCircle />,\r\n          color : 'green-500',\r\n          label : 'Channel deleted'\r\n        })\r\n        if (oldUser.currentChannel._id !== deletedChannel._id)\r\n          return { ...oldUser };\r\n        oldUser.currentChannel = {};\r\n        return { ...oldUser };\r\n      });\r\n      setChannels((oldChannels) =>\r\n        oldChannels.filter((channel) => channel._id !== deletedChannel._id)\r\n      );\r\n    });\r\n    socket.on(\"banMember\", ({ bannedMember, channelID }) => {\r\n      let isBannedMember = false;\r\n      setUser((oldUser) => {\r\n        if (oldUser.id === bannedMember._id) isBannedMember = true;\r\n        return { ...oldUser };\r\n      });\r\n      if (isBannedMember)\r\n        setChannels((oldChannels) =>\r\n          oldChannels.filter((channel) => channel._id !== channelID)\r\n        );\r\n    });\r\n    return () => {\r\n      socket.off(\"channelNotification\");\r\n      socket.off(\"deleteChannel\");\r\n      socket.off(\"banMember\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.entries(user.currentChannel).length !== 0 ? (\r\n        <CurrentChannel \r\n            channels={channels} \r\n            setChannels={setChannels}\r\n        />\r\n      ) : (\r\n        <ChannelHome\r\n            loading={loading}\r\n            channels={channels}\r\n            setChannels={setChannels}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavChannelMode;\r\n","import React from 'react';\r\n\r\nconst NavMessageMode = (props) => {\r\n\r\n     return (\r\n         <div>\r\n\r\n            <div className='border-b-2 h-16 border-gray-900 text-gray-100 font-bold text-lg px-6 flex items-center justify-between'>\r\n\r\n                <h1 className='text-center text-white'>Message</h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"p-4\">\r\n\r\n                <button className='flex items-center mb-4 cursor-pointer w-full ctmFocus hoverMenuProfileBg p-2 rounded-lg'>\r\n                    <div className='w-8 h-8 channelIcon mr-3 rounded-md flex items-center justify-center text-white'></div>\r\n                    <span className='text-gray-300'>Message</span>\r\n                </button>\r\n\r\n            </div>\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default NavMessageMode;","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport NavChannelMode from \"./Mode/NavChannelMode/NavChannelMode\";\r\nimport NavMessageMode from \"./Mode/NavMessageMode/NavMessageMode\";\r\nimport Dropdown from \"../../../components/Utils/Dropdown\";\r\nimport Modal from \"../../../components/Utils/Modal\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport { IoMdExit } from \"react-icons/io\";\r\nimport { faChevronDown, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { API_URL } from \"../../../config\";\r\nimport axios from 'axios';\r\n\r\nconst ChatNavContent = ({ currentMode, setMode }) => {\r\n    const { user , setUser } = useContext(UserContext);\r\n    const [isOpenUserMenu, setIsOpenUserMenu] = useState(false);\r\n    const [isOpenUserProfil, setIsOpenUserProfil] = useState(false);\r\n    const [, , removeCookie] = useCookies();\r\n    const [pseudo, setPseudo] = useState(user.pseudo);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [picture, setPicture] = useState(\"\");\r\n    const [picturePreview , setPicturePreview] = useState('');\r\n    const formDataRef = useRef();\r\n\r\n    const handleChangeImage = (e) => {\r\n        const data = new FormData()\r\n            data.append('pseudo',pseudo);\r\n            // data.append('email',email);\r\n            data.append('picture',picture);\r\n            data.append('userID',user.id)\r\n\r\n        axios.post(`${API_URL}user/uploadprofilpicture`,data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setUser({...user , picture : `${API_URL}${res.data}`})\r\n            }) \r\n    } \r\n\r\n    const handlePicturePreview = (e) => {\r\n        setPicture(e.target.files[0])\r\n        const pictureURL = URL.createObjectURL(e.target.files[0]);\r\n        setPicturePreview(pictureURL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpenUserMenu) {\r\n            setPseudo(user.pseudo);\r\n            setEmail(user.email);\r\n        }\r\n    }, [isOpenUserProfil]);\r\n\r\n    return (\r\n        <div\r\n            className={`w-72 h-full lg:w-10/12 bg-black-900 flex flex-col justify-between flex-shrink-0`}\r\n        >\r\n            <Modal isOpen={isOpenUserProfil} setIsOpen={setIsOpenUserProfil}>\r\n                <span className=\"font-bold text-xl block text-center mb-4 text-gray-300\">\r\n                    My Profil\r\n                </span>\r\n\r\n                <form ref={formDataRef} className='flex'>\r\n                        <div className=\"flex flex-col items-center mr-4 text-gray-300\">\r\n                            <img className='h-44 w-44 ' src={picturePreview ? picturePreview : user.picture}></img>\r\n                            <label\r\n                                htmlFor=\"profilpicture\"\r\n                                className=\"cursor-pointer border border-gray-300 py-1 w-full text-center ctmFocus text-gray-300 hover:bg-gray-900\"\r\n                            >\r\n                                Change\r\n                            </label>\r\n                            <input id=\"profilpicture\" type=\"file\" hidden onChange={handlePicturePreview} accept='image/png , image/jpeg, image/jpg'/>\r\n                        </div>\r\n                        <div className=\"flex flex-col justify-between\">\r\n                            <input\r\n                                onChange={(e) => setPseudo(e.target.value)}\r\n                                spellCheck=\"false\"\r\n                                type=\"text\"\r\n                                className=\"border border-gray-500 bg-transparent px-4 py-2 ctmFocus block text-gray-300\"\r\n                                value={pseudo}\r\n                            />\r\n                            <input\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                spellCheck=\"false\"\r\n                                type=\"email\"\r\n                                className=\"border border-gray-500 bg-transparent px-4 py-2 ctmFocus block text-gray-300\"\r\n                                value={email}\r\n                            />\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"cursor-pointer border border-gray-300 py-1 w-full text-center ctmFocus text-gray-300 hover:bg-gray-900\"\r\n                            >\r\n                                Change Password\r\n                            </a>\r\n                        </div>    \r\n                </form>\r\n                <button \r\n                className=\"w-full py-2 bg-blue-700 mt-4 ctmFocus font-semibold hover:bg-blue-800\"\r\n                onClick={() => handleChangeImage()}>\r\n                        Save\r\n                </button>   \r\n            </Modal>\r\n\r\n            <>{currentMode === \"channel\" ? <NavChannelMode /> : <NavMessageMode />}</>\r\n\r\n            <div>\r\n                <div className=\"h-14 bg-gray-700 flex\">\r\n                    <button\r\n                        className=\"px-6 w-full text-gray-300 ctmFocus hover:bg-gray-800\"\r\n                        onClick={() => setMode(\"channel\")}\r\n                    >\r\n                        CHANNEL\r\n                    </button>\r\n                    <button\r\n                        className=\"px-6 w-full text-gray-300 ctmFocus hover:bg-gray-800\"\r\n                        onClick={() => setMode(\"message\")}\r\n                    >\r\n                        MESSAGE\r\n                    </button>\r\n                </div>\r\n\r\n                <a\r\n                    href=\"#\"\r\n                    className=\"h-20 bg-black-1100 p-6 flex items-center justify-between w-full ctmFocus ring-inset relative\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setIsOpenUserMenu(true);\r\n                    }}\r\n                >\r\n                    <Dropdown\r\n                        isOpen={isOpenUserMenu}\r\n                        setIsOpen={setIsOpenUserMenu}\r\n                        top=\"-144px\"\r\n                        right=\"16px\"\r\n                    >\r\n                        <li>\r\n                            <button\r\n                                className=\"flex w-full transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus\"\r\n                                onClick={() => setIsOpenUserProfil(true)}\r\n                            >\r\n                                <FontAwesomeIcon className=\"text-xl mr-3\" icon={faUserCircle} />\r\n                                My Profile\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"flex w-full transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus\">\r\n                                <FaTwitter className=\"text-xl mr-3\" />\r\n                                Tweeter\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"h-1 border-b border-gray-100 my-2 opacity-30\"></li>\r\n                        <li>\r\n                            <button\r\n                                className=\"flex w-full text-red-500 transition duration-200 hoverMenuProfileBg rounded-lg p-2 items-center ctmFocus\"\r\n                                onClick={() => {\r\n                                    removeCookie([\"REMEMBER_ME\"]);\r\n                                    window.location.reload();\r\n                                }}\r\n                            >\r\n                                <IoMdExit className=\"text-xl mr-3\" />\r\n                                Logout\r\n                            </button>\r\n                        </li>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"flex items-center\">\r\n                        <img\r\n                            className=\"h-10 w-10 mr-5\"\r\n                            src={user.picture}\r\n                            alt=\"your profile picture\"\r\n                        ></img>\r\n                        <span className=\"text-gray-300 text-xl\">{user.pseudo}</span>\r\n                    </div>\r\n                    <FontAwesomeIcon className=\"text-gray-300\" icon={faChevronDown} />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatNavContent;\r\n","import React from 'react';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport MediaQuery from 'react-responsive';\r\nimport ChatNavContent from './ChatNavContent';\r\n\r\nconst ChatNav = ({ currentMode , setMode , isOpenBurgerMenu , setIsOpenBurgerMenu}) => {\r\n\r\n     return (\r\n         <>\r\n            <MediaQuery minWidth='1024px'>\r\n\r\n                <ChatNavContent currentMode={currentMode} setMode={setMode} />\r\n                \r\n            </MediaQuery>\r\n        \r\n            <MediaQuery maxWidth='1023px'>\r\n                <div className={`w-72 lg:flex lg:flex-shrink-0 lg:h-full lg:w-full lg:z-50 lg:transition lg:duration-200 ease lg:absolute transform  ${isOpenBurgerMenu ? 'lg:translate-x-0' : 'lg:-translate-x-full'}`}>\r\n            \r\n                    <ChatNavContent currentMode={currentMode} setMode={setMode} />\r\n                    \r\n                    {\r\n                        isOpenBurgerMenu &&\r\n\r\n                            <div className='flex justify-center w-2/12 bg-black bg-opacity-30' onClick={() => setIsOpenBurgerMenu(false)}>\r\n                                <button \r\n                                    className='h-9 w-9 bg-black-1100 z-50 right-10 mt-3 flex items-center justify-center rounded-lg ctmFocus' \r\n                                    onClick={() => setIsOpenBurgerMenu(false)}>\r\n                                    <CgClose className='text-white' />\r\n                                </button>   \r\n                            </div>       \r\n                    }\r\n                </div>\r\n            </MediaQuery> \r\n        </>  \r\n     )\r\n\r\n}\r\n \r\nexport default ChatNav;","import React from 'react';\r\nimport { API_URL } from '../../../../config';\r\n\r\nconst Message = ({user , message , date, hour}) => {\r\n\r\n    const handleFormatDate = () => {\r\n        const messageDay = date.split('/');\r\n        const currentDay = new Date().toLocaleDateString().split('/');\r\n        for (let i = 0 ; i <= 2 ; i++){\r\n            messageDay[i] = parseInt(messageDay[i]);\r\n            currentDay[i] = parseInt(currentDay[i]);\r\n        }\r\n\r\n        if (messageDay[1] === currentDay[1] && messageDay[2] === currentDay[2]){\r\n            if (messageDay[0] === currentDay[0]) return 'today at ';\r\n            else if (messageDay[0] === currentDay[0] - 1) return 'yesterday at ';\r\n        }\r\n\r\n        return date;\r\n    }\r\n    \r\n     return (\r\n        <li className='flex mb-4 w-full'>\r\n            <img \r\n                className='h-10 w-10 bg-white rounded-md mr-5 mt-1 flex-none' \r\n                src={`${API_URL}${user.picture}`} \r\n                alt={'C'}>\r\n            </img>\r\n            <div className='w-full'>\r\n                <div className='flex items-baseline'>\r\n                    <h2 className='mr-3 font-bold text-lg colorName'>{user.pseudo}</h2> \r\n                    <span className='text-gray-300 text-xs colorName'>{handleFormatDate() + ' ' + hour}</span>\r\n                </div>\r\n                <div className='text-gray-300 w-full'>{message}</div>\r\n            </div>\r\n        </li>\r\n     )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst component = ({ date }) => {\r\n\r\n    const formatDate = () => {\r\n        // let dateDivider = '';\r\n        const month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\r\n        const monthNumber = (date.slice(3,5)[0] === '0')-1 ? date.slice(3,5) - 1 : date.slice(4,5) - 1 ;\r\n\r\n        return `${month[monthNumber]} ${date.slice(0,2)}, ${date.slice(6,10)}`\r\n    }\r\n    formatDate()\r\n    // console.log(date)\r\n     return (\r\n         <li className='flex justify-between items-center mb-4'>\r\n\r\n             <div className='border-b border-gray-500 w-full'></div>\r\n\r\n             <span className='inline-block flex-shrink-0 text-center break-normal mx-4 text-gray-500 text-xs'>{formatDate()}</span>\r\n\r\n             <div className='border-b border-gray-500 bg-gray-500 w-full'></div>\r\n\r\n         </li>\r\n     )\r\n\r\n}\r\n\r\nexport default component;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { IoSend } from 'react-icons/io5';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { API_URL } from '../../../config';\r\nimport axios from 'axios';\r\nimport './customtailwind.css';\r\nimport { SocketContext } from '../../../context/SocketContext';\r\nimport Message from './Message/Message';\r\nimport DayDivider from './Message/DayDivider';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nconst Channel = ({ setIsOpenBurgerMenu }) => {\r\n\r\n    const { user } = useContext(UserContext);\r\n    const [channelMessage , setChannelMessage] = useState([]);\r\n    const messageRef = useRef();\r\n    const socket = useContext(SocketContext)\r\n\r\n    useEffect(() => {\r\n        socket.on('sendMessage', (message) => {\r\n            if (channelMessage.findIndex(mess => mess._id !== message._id) !== -1) return;\r\n            setChannelMessage(old => [...old, message])\r\n        })\r\n        // VOIR POUR LE DEMONTER\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}channel/message/${user.currentChannel._id}`) // pas besoin de l'id modifier le back-end\r\n        .then(res => {\r\n            // console.log(res.data)\r\n            setChannelMessage(res.data)\r\n        })\r\n    },[])\r\n\r\n    const returnMessagesWithDayDivider = () => {   \r\n        const channelMessageCopy = [];\r\n        const day   = channelMessage.filter(message => message.channelID === user.currentChannel._id).map(message => message.date.slice(0,2))\r\n        const month = channelMessage.filter(message => message.channelID === user.currentChannel._id).map(message => message.date.slice(3,5))\r\n        const years = channelMessage.filter(message => message.channelID === user.currentChannel._id).map(message => message.date.slice(6,10))\r\n        let currentDay = day[0];\r\n        let currentMonth = month[0];\r\n        let currentYears = years[0];\r\n        channelMessage.filter(message => message.channelID === user.currentChannel._id).forEach((message, index) => {\r\n            const messageDay = message.date.slice(0,2)\r\n            const messageMonth = message.date.slice(3,5)\r\n            const messageYears = message.date.slice(6,10)\r\n            if (messageDay !== currentDay || messageMonth !== currentMonth || messageYears !== currentYears) {\r\n                channelMessageCopy.push(<DayDivider key={index} date={message.date} />)\r\n                currentDay = day[index];\r\n                currentMonth = month[index];\r\n                currentYears = years[index];\r\n            }\r\n            channelMessageCopy.push(<Message key={message._id} {...message} />)   \r\n        })\r\n        return channelMessageCopy;\r\n    }\r\n\r\n    // returnMessages()\r\n    const sendMessage = () => {\r\n        const message = messageRef.current.innerText\r\n        if (!message) return;\r\n\r\n        const messageInformations = {\r\n            userID : user.id,\r\n            channelID : user.currentChannel._id,\r\n            message : message\r\n        }\r\n        messageRef.current.innerText = '';\r\n        socket.emit('sendMessage',messageInformations);\r\n        socket.emit('channelNotification',user.currentChannel._id)\r\n    }   \r\n\r\n    const pressEnterForSendMessage = (e) => {\r\n        \r\n        if (e.keyCode !== 13) return;\r\n        e.preventDefault();\r\n        sendMessage()\r\n    }\r\n    const clickSendForMessage = () => {\r\n        sendMessage()\r\n    }\r\n\r\n     return (\r\n         <div className='flex flex-col h-full w-full justify-between'>\r\n            <div className='h-16 shadow-lg text-gray-100 font-bold text-lg px-11 lg:px-8 flex items-center uppercase flex-shrink-0'>\r\n                <MediaQuery maxWidth='1023px'>\r\n\r\n                    <button className='mr-6 ctmFocus p-2' onClick={() => setIsOpenBurgerMenu(true)}>\r\n                        <GiHamburgerMenu />\r\n                    </button>\r\n\r\n                </MediaQuery>\r\n                <h1>{Object.entries(user.currentChannel).length !== 0 ? user.currentChannel.name : 'Select channel'}</h1>\r\n\r\n            </div>\r\n                {\r\n                    Object.entries(user.currentChannel).length !== 0 ? \r\n                    <>\r\n                        <div className='overflow-y-scroll h-full scrollbar flex flex-col-reverse'>\r\n                            <ul className='px-11 pt-6 lg:px-8 break-all mt-auto'>\r\n                            {\r\n                                returnMessagesWithDayDivider()\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className='min-h-10 max-w-full mx-11 lg:mx-8 flex relative rounded-md overflow-hidden my-7 flex-shrink-0'>\r\n                                    <div \r\n                                        contentEditable='true'\r\n                                        ref={messageRef}\r\n                                        onKeyDown={(e) => pressEnterForSendMessage(e)}\r\n                                        className='h-full w-full inputSearch ctmFocus p-2 pr-10 break-all text-gray-300' \r\n                                        >\r\n                                    </div>\r\n                                <button \r\n                                    onClick={() => clickSendForMessage()}\r\n                                    className={`absolute right-1 inset-y-1 ctmFocus m-auto bg-blue-500  text-white h-8 w-8 flex items-center justify-center rounded-md cursor-pointer`}>\r\n                                    <IoSend />\r\n                                </button>\r\n                        </div>\r\n                    </>\r\n\r\n                    :\r\n\r\n                    <div className=\"flex items-center justify-center flex-col h-full\">\r\n                        <h3 className='text-4xl'>Welcome !</h3>\r\n                        <p>Please select channel</p>\r\n                    </div>\r\n                }\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n\r\n     return (\r\n         <div>\r\n\r\n             <h1>Message</h1>\r\n\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Message;","import React, { useContext, useEffect, useState } from 'react';\r\nimport ChatNav from './ChatNav/ChatNav';\r\nimport ChannelMode from './ChannelMode/ChannelMode';\r\nimport MessageMode from './MessageMode/MessageMode';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { BiWinkSmile } from 'react-icons/bi';\r\n\r\nconst ChatApp = (props) => {\r\n\r\n    const [mode , setMode] = useState('channel');\r\n    const [selectedChannel , setSelectedChannel] = useState('');\r\n    const [isOpenBurgerMenu , setIsOpenBurgerMenu] = useState(false);\r\n    const { user , setUser } = useContext(UserContext);\r\n\r\n    const returnCurrentMode = () => {\r\n        switch(mode){\r\n            case 'channel' : \r\n                return <ChannelMode \r\n                            setIsOpenBurgerMenu={setIsOpenBurgerMenu} \r\n                            currentChannel={selectedChannel}\r\n                        />\r\n            case 'message' : \r\n                return <MessageMode />\r\n            default : \r\n                return <ChannelMode \r\n                            setIsOpenBurgerMenu={setIsOpenBurgerMenu} \r\n                            currentChannel={selectedChannel}\r\n                        />\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUser(oldUser => {\r\n            oldUser.notifications.push({\r\n              icons : <BiWinkSmile />,\r\n              color : 'blue-500',\r\n              label : `Welcome ${oldUser.pseudo}`\r\n            })\r\n            return {...oldUser}\r\n        })\r\n    },[])\r\n\r\n     return (\r\n         <>\r\n            <div className='w-full h-full bg-black-700 shadow-2xl flex overflow-hidden relative'>\r\n                \r\n                <ChatNav \r\n                    isOpenBurgerMenu={isOpenBurgerMenu} \r\n                    setIsOpenBurgerMenu={setIsOpenBurgerMenu} \r\n                    currentMode={mode} \r\n                    setMode={setMode} \r\n                />\r\n\r\n                { returnCurrentMode() }\r\n\r\n            </div>\r\n         </>\r\n     )\r\n\r\n}\r\n\r\nexport default ChatApp;","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport NotificationItem from './NotificationItem';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// FAIRE UNE SMOOTH ANIMATION A L'APPARATION DE LA NOTIF\r\n// REGLER LE BUG DE TIMEOUT QUI NE FAIT PAS TOUT LE TEMPS 4secondes\r\n\r\nconst Notifications = (props) => {\r\n\r\n    const { user , setUser } = useContext(UserContext);\r\n\r\n    // const [userNotif , setUserNotif] = useState(user.notifications)\r\n\r\n    useEffect(() => {\r\n        if (user.notifications.length === 0) return;\r\n        setTimeout(() => {\r\n            setUser(oldUser => {\r\n                oldUser.notifications.shift()\r\n                return {...oldUser}\r\n            })\r\n        },4000)\r\n        clearTimeout()\r\n        console.log('new notif')\r\n    },[user])\r\n\r\n     return (\r\n         <ul style={{ zIndex : 9999 }} className='absolute top-0 left-1/2 transform -translate-x-1/2'>\r\n\r\n                {user.notifications.map(({icons , label, color},index) => {\r\n\r\n                    return <NotificationItem key={uuidv4()} icons={icons} label={label} color={color} />\r\n\r\n                })}\r\n\r\n         </ul>\r\n     )\r\n\r\n}\r\n\r\nexport default Notifications;","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { API_URL } from './config';\r\nimport Authentication from './containers/Authentication/Authentication';\r\nimport ChatApp from './containers/ChatApp/ChatApp';\r\nimport { UserContext } from './context/UserContext';\r\nimport  { SocketContext , socket} from './context/SocketContext'; \r\nimport { useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\nimport NotificationItem from './components/Utils/Notifications/NotificationItem';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport Notifications from './components/Utils/Notifications/Notifications';\r\n\r\n\r\nconst userDisconnected = {\r\n    id : null,\r\n    pseudo : null,\r\n    email : null,\r\n    description : null,\r\n    picture : null,\r\n    role : null,\r\n    isConnected : false,\r\n    currentChannel : {},\r\n    notifications : [],\r\n}\r\n\r\nconst App = (props) => {\r\n\r\n    // const notificationReducer = (state, action) => {\r\n    //     switch (action) {\r\n    //         case 'addnotif' : \r\n    //     }\r\n    // }\r\n\r\n    const [user , setUser] = useState(userDisconnected)\r\n    // const [state , dispatch] = useReducer()\r\n    const [ , setCookie, removeCookie] = useCookies()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}user/rememberme`,{withCredentials : true})\r\n            .then(res => {\r\n                if (res.data === '') throw new Error();\r\n                setUser({\r\n                    id : res.data._id,\r\n                    pseudo : res.data.pseudo,\r\n                    email : res.data.email,\r\n                    description : res.data.description,\r\n                    picture : API_URL + res.data.picture,\r\n                    role : res.data.role,\r\n                    isConnected : true,// pas besoin de ça\r\n                    currentChannel : {},\r\n                    notifications : [],\r\n                })\r\n                // A VOIR POUR FAIRE DE L'ASYNC\r\n            \r\n                setCookie(['REMEMBER_ME'],res.data.remember_me_token)\r\n            })\r\n            .catch(err => {\r\n                setUser(userDisconnected);\r\n                removeCookie(['REMEMBER_ME'])\r\n            })\r\n    \r\n    },[])\r\n\r\n    return (\r\n        <div className='h-screen flex justify-center items-center bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900'>\r\n            <SocketContext.Provider value={socket}>\r\n                <UserContext.Provider value={{user , setUser}} >\r\n                {/* <ul className='absolute'>\r\n                    {user.notifications.map(({icons , label, color},index) => {\r\n                        // console.log(icons)\r\n                        return <Popup key={index} icons={icons} label={label} color={color} />\r\n                    })}\r\n                </ul> */}\r\n                {/* <Popup notif={<FiCheckCircle />} label='testtt' color='pink-500' /> */}\r\n                    <Notifications />\r\n                {   \r\n                    !user.isConnected ?  \r\n\r\n                    <Authentication /> \r\n\r\n                    : \r\n\r\n                    <ChatApp />     \r\n                }\r\n    \r\n                </UserContext.Provider>\r\n            </SocketContext.Provider>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './tailwindCustomClass.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> , document.querySelector('#root'));"],"sourceRoot":""}